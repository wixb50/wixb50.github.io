<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software on Wixb blog</title>
    <link>http://wixb50.github.io/categories/software/</link>
    <description>Recent content in Software on Wixb blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wixb50@gmail.com (Wixb)</managingEditor>
    <webMaster>wixb50@gmail.com (Wixb)</webMaster>
    <copyright>(c) 2015 wixb.All rights reserved.</copyright>
    <lastBuildDate>Wed, 23 Dec 2015 16:21:30 +0800</lastBuildDate>
    <atom:link href="http://wixb50.github.io/categories/software/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>aria2 rpc</title>
      <link>http://wixb50.github.io/2015/12/23/aria2-rpc/</link>
      <pubDate>Wed, 23 Dec 2015 16:21:30 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/12/23/aria2-rpc/</guid>
      <description>

&lt;p&gt;##目录
&amp;lt;!&amp;ndash; MarkdownTOC &amp;ndash;&amp;gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#null-link&#34;&gt;前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#初步部署-aria2-简易版&#34;&gt;初步部署 Aria2 简易版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#进阶-aria2&#34;&gt;进阶 Aria2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#end&#34;&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#参考&#34;&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- /MarkdownTOC --&gt;

&lt;h2 id=&#34;前言-null-link&#34;&gt;&lt;a href=&#34;chrome://not-a-link&#34;&gt;前言&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://aria2.sourceforge.net/&#34;&gt;Aria2&lt;/a&gt; 是一个轻量级多协议和多源命令行下载实用工具。它支持 HTTP / HTTPS, FTP, SFTP, bt 和 Metalink。通过内置 Aria2 可以操作 json - rpc 和 xml - rpc。对，Aria2 没有 GUI 图形界面，只有粗糙的命令行界面！但这也正是 Aria2 之轻快好省所在。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;官方下载链接：&lt;a href=&#34;http://sourceforge.net/projects/aria2/files/stable/&#34;&gt;http://sourceforge.net/projects/aria2/files/stable/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;初步部署-aria2-简易版&#34;&gt;初步部署 Aria2 简易版&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. 新建几个有关文件&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;上面已经提供了下载链接，根据平台/系统位数（32bit/64bit）下载相应文件即可。（存放路径最好是英文/数字）然后在目录下以新建文本文档的方式新建几个文件，方便之后的使用。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Aria2.log（运行日志）&lt;/li&gt;
&lt;li&gt;aria2.session（下载历史）&lt;/li&gt;
&lt;li&gt;aria2.conf（配置文件）&lt;/li&gt;
&lt;li&gt;HideRun.vbs （用来隐藏命令行窗口,仅限windows下）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;而后用记事本修改配置文件 aria2.conf，&lt;strong&gt;根据实际情况修改：&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dir=默认下载目录（例：D:\Inbox）
log=日志文件存放目录（例：D:\Aria2\Aria2.log）
input-file=记录下载历史文件目录（例：D:\Aria2\aria2.session）
save-session=存放下载历史文件目录（例：同上）
save-session-interval=60
force-save=true
log-level=error
  
  
# see --split option
max-concurrent-downloads=5
continue=true
max-overall-download-limit=0
max-overall-upload-limit=50K
max-upload-limit=20
  
# Http/FTP options
connect-timeout=120
lowest-speed-limit=10K
max-connection-per-server=10
max-file-not-found=2
min-split-size=1M
split=5
check-certificate=false
http-no-cache=true
  
# FTP Specific Options
  
# BT/PT Setting
bt-enable-lpd=true
#bt-max-peers=55
follow-torrent=true
enable-dht6=false
bt-seed-unverified
rpc-save-upload-metadata=true
bt-hash-check-seed
bt-remove-unselected-file
bt-request-peer-speed-limit=100K
seed-ratio=0.0
  
  
# Metalink Specific Options
  
# RPC Options
enable-rpc=true
pause=false
rpc-allow-origin-all=true
rpc-listen-all=true
rpc-save-upload-metadata=true
rpc-secure=false
  
# Advanced Options
daemon=true
disable-ipv6=true
enable-mmap=true
file-allocation=falloc
max-download-result=120
#no-file-allocation-limit=32M
force-sequential=true
parameterized-uri=true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Windows NOTE :&lt;/strong&gt; 而后修改 HideRun.vbs，将 Aria2c.exe 与配置文件 Aria2.conf 链接，并实现无命令行启动。那么日后打开 Aria2 就双击 HideRun.vbs 这个文件而不是双击 aria2c.exe。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CreateObject(&amp;quot;WScript.Shell&amp;quot;).Run &amp;quot;（程序所在目录 例：D:\Aria2\aria2c.exe） --conf-path=aria2.conf&amp;quot;,0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Linux NOTE :&lt;/strong&gt; 可使用配置文件直接运行，转到后台即可。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --conf-path=aria2.conf &amp;amp;  #其中&amp;amp;(后台运行)是可选项
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;2. Web 前端控制&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;如此这般，Aria2 就配置好了，如果要添加开机自启动将 HideRun.vbs 的快捷方式拖入启动文件夹建立计划任务就 OK 了。那么问题就来了，这么一个看不见摸不着的软件怎么使用？别急，即使没有 GUI，Aria2 也还是有 Web 端控制界面的，目前比较知名的有 &lt;a href=&#34;https://github.com/ziahamza/webui-aria2&#34;&gt;Aria2 Web UI&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/binux/yaaw&#34;&gt;YAAW&lt;/a&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Aria2 Web UI（推荐！）: &lt;a href=&#34;http://ziahamza.github.io/webui-aria2/&#34;&gt;英文原版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;YAAW: &lt;a href=&#34;http://binux.github.io/yaaw/demo/&#34;&gt;英文原版&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Tips：其他控制界面/扩展/脚本可能会需要填写 JSON-RPC Path，默认为: &lt;a href=&#34;http://localhost:6800/jsonrpc&#34;&gt;http://localhost:6800/jsonrpc&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;简易版的 Aria2 至此就部署完毕，你可以在 Web 控制前段方便地添加下载链接/bt种子了。&lt;/p&gt;

&lt;h2 id=&#34;进阶-aria2&#34;&gt;进阶 Aria2&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. 配置文件 aria2.conf 详解&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;更多参数请参考官方说明文档：&lt;a href=&#34;http://aria2.sourceforge.net/manual/en/html/aria2c.html&#34;&gt;http://aria2.sourceforge.net/manual/en/html/aria2c.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;网友翻译的部分内容：  &lt;a href=&#34;http://sydi.org/posts/linux/aria2c-usage-sample-cns.html#fn.1&#34;&gt;http://sydi.org/posts/linux/aria2c-usage-sample-cns.html#fn.1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. 结合Docker使用&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;可查看ziahamza大神配置好的：&lt;a href=&#34;https://github.com/ziahamza/webui-aria2&#34;&gt;Aria2 Web UI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. 搭配脚本/扩展&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;迅雷离线（需会员账号）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chrome Extension: &lt;a href=&#34;https://chrome.google.com/webstore/detail/thunderlixianassistant/eehlmkfpnagoieibahhcghphdbjcdmen&#34;&gt;ThunderLixianAssistant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;UserScript: &lt;a href=&#34;https://github.com/binux/ThunderLixianExporter&#34;&gt;ThunderLixianExporter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;旋风离线&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;UserScript: &lt;a href=&#34;https://greasyfork.org/zh-CN/scripts/354-xuanfengex&#34;&gt;XuanFengEx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;UserScript: &lt;a href=&#34;https://greasyfork.org/zh-CN/scripts/2398-lixianexporter&#34;&gt;LixianExporter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;百度网盘&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chrome Extension: &lt;a href=&#34;https://chrome.google.com/webstore/detail/baiduexporter/mjaenbjdjmgolhoafkohbhhbaiedbkno&#34;&gt;BaiduExporter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Firefox Addons: &lt;a href=&#34;https://github.com/acgotaku/BaiduExporter&#34;&gt;BaiduExporter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;UserScript: &lt;a href=&#34;https://greasyfork.org/scripts/294-baidupandownloadhelper&#34;&gt;BaiduPanDownloadHelper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其他脚本&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chrome Extension: &lt;a href=&#34;https://chrome.google.com/webstore/detail/%E6%B7%BB%E5%8A%A0%E5%88%B0aria2/nimeojfecmndgolmlmjghjmbpdkhhogl&#34;&gt;添加到 aria2&lt;/a&gt; &lt;a href=&#34;http://git.oschina.net/yky/CDHelper&#34;&gt;Chrome Download Helper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;end&#34;&gt;End&lt;/h2&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/aa65535/5e956c4eb4f451ddec29&#34;&gt;https://gist.github.com/aa65535/5e956c4eb4f451ddec29&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>aria2命令</title>
      <link>http://wixb50.github.io/2015/12/23/aria2%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 23 Dec 2015 14:21:30 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/12/23/aria2%E5%91%BD%E4%BB%A4/</guid>
      <description>

&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;

&lt;!-- MarkdownTOC --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ria2&#34;&gt;ria2&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#基本使用&#34;&gt;基本使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#基本用法&#34;&gt;基本用法&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#下载一个文件&#34;&gt;下载一个文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用两个连接从一个源下载文件&#34;&gt;使用两个连接从一个源下载文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用两个连接下载文件：&#34;&gt;使用两个连接下载文件：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#从http或ftp服务器下载：&#34;&gt;从http或ftp服务器下载：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#从任意源进行并行下载：&#34;&gt;从任意源进行并行下载：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如果仅仅指定本地磁盘上的torrent文件或者metalink，是不需要-z选项的，如：&#34;&gt;如果仅仅指定本地磁盘上的torrent文件或者metalink，是不需要-Z选项的，如：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#从文件中读取目的文件，并行下载&#34;&gt;从文件中读取目的文件，并行下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#退出时保存出错未完成的下载-使用session&#34;&gt;退出时保存出错/未完成的下载, 使用&lt;code&gt;session&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#后续可以使用该文件继续未完成的下载：&#34;&gt;后续可以使用该文件继续未完成的下载：&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#metalink相关下载示例&#34;&gt;Metalink相关下载示例&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#从远程metalink下载文件：&#34;&gt;从远程metalink下载文件：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#从远程metalink下载文件但在内存中处理metalink：&#34;&gt;从远程metalink下载文件,但在内存中处理metalink：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#通过本地metalink下载：&#34;&gt;通过本地metalink下载：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用5个server下载&#34;&gt;使用5个server下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#通过多个本地metalink文件进行下载：&#34;&gt;通过多个本地metalink文件进行下载：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#打印metalink的内容&#34;&gt;打印metalink的内容&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#通过序号下载指定文件&#34;&gt;通过序号下载指定文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#指定用户偏好从本地metalink下载文件&#34;&gt;指定用户偏好从本地metalink下载文件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#bittorrent相关下载&#34;&gt;BitTorrent相关下载&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#通过远程bittorrent文件下载&#34;&gt;通过远程BitTorrent文件下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#通过远程bittorrent文件下载但在内存中处理&#34;&gt;通过远程BitTorrent文件下载,但在内存中处理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#通过本地torrent文件下载&#34;&gt;通过本地torrent文件下载:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#可以同时处理多个torrent文件&#34;&gt;可以同时处理多个torrent文件:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#通过bittorrent-magnet-uri下载：&#34;&gt;通过BitTorrent Magnet URI下载：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#自动调整peer节点数量&#34;&gt;自动调整peer节点数量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#开启dht&#34;&gt;开启DHT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#开启ipv6的dht&#34;&gt;开启ipv6的DHT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#增加和删除tracker-uri：&#34;&gt;增加和删除tracker URI：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#加密&#34;&gt;加密&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#打印torrent文件内容&#34;&gt;打印torrent文件内容&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#通过序号选择指定文件下载：&#34;&gt;通过序号选择指定文件下载：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#修改监听端口&#34;&gt;修改监听端口&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#指定aria2完成下载后的停止条件&#34;&gt;指定aria2完成下载后的停止条件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#设置上传速度&#34;&gt;设置上传速度&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#seeding已经下载完成的文件&#34;&gt;Seeding已经下载完成的文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#还可以同时播种多个torrent文件&#34;&gt;还可以同时播种多个torrent文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#通过index指定文件名&#34;&gt;通过index指定文件名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#为进行文件预览进行分片优先下载&#34;&gt;为进行文件预览进行分片优先下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#用代理服务器&#34;&gt;用代理服务器&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#为所有协议httpsftp设定代理服务器&#34;&gt;为所有协议(HTTP(S)/FTP)设定代理服务器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#设置http代理&#34;&gt;设置http代理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用需要认证的代理&#34;&gt;使用需要认证的代理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#高级的http特性：&#34;&gt;高级的http特性：&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#导入cookie&#34;&gt;导入cookie&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#其他高级特性&#34;&gt;其他高级特性&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#下载速度限制&#34;&gt;下载速度限制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用-v修复受损的下载&#34;&gt;使用-V修复受损的下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#当下载速度下于某个特定值时放弃下载&#34;&gt;当下载速度下于某个特定值时放弃下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#uri的参数化支持&#34;&gt;URI的参数化支持&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#时间戳&#34;&gt;时间戳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#输入文件&#34;&gt;输入文件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- /MarkdownTOC --&gt;

&lt;p&gt;#aria2
&lt;strong&gt;title:&lt;/strong&gt; aria2 使用说明&lt;br /&gt;
&lt;strong&gt;title:&lt;/strong&gt; aria2,aria2c,wget,linux,下载&lt;br /&gt;
&lt;strong&gt;info:&lt;/strong&gt; &lt;strong&gt;aria2&lt;/strong&gt;是一款轻量型命令行下载工具，它提供了对多协议和多源地址的支持，目前支持的协议包括&lt;strong&gt;HTTP(S), FTP, BitTorrent (DHT, PEX, MSE/PE), and Metalink&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;aria2可以从多个源地址，并使用多种协议进行下载，并尝试将下载带宽利用率最大化。它可以同时从HTTP(S)/FTP 和 BitTorrent下载一份数据，并且将其上传到bt集群中。通过Metalink的分块检查，aria2可以在下载过程中自动的进行数据校验。&lt;/p&gt;

&lt;p&gt;虽然现在有诸如&lt;strong&gt;wget&lt;/strong&gt;和&lt;strong&gt;curl&lt;/strong&gt;等其他类似产品，但aria2具有两个独特的功能：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;aria2可以从多个源下载文件(HTTP(S)/FTP/BitTorrent)，&lt;/li&gt;
&lt;li&gt;aria2可以并发的进行多个源地址的下载。这样用户将不必等待单个文件的下载完成，而且aria2会尽可能快的下载。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;除aria2外，也有一些其他可以进行分片下载的工具，它们往往按照线程数分割文件，并行下载，换言之，它们不会对未完成的部分进行自适应性重新分片，当整个流程工作正常时，这个策略是可以的，但一旦存在一个线程运行非常慢，这样整个进程就需要等待该线程的执行。而aria2可以很好的处理这个情况，它可以将文件分割成1M大小的分片，当某个线程运行特别缓慢时，aria2可以使用更快的线程来替换。总之，根据作者的说法，aria2是非常智能和可靠的。&lt;/p&gt;

&lt;p&gt;和最初的aria工具具有一个GTK+界面不同，aria2只提供了命令行接口，从而使得对资源的要求更小。通常它的物理内存消耗为4M(HTTP/FTP)到9M(BitTorrent),当进行bt下载且速度为2.8M/s时的cpu消耗约为6%。&lt;/p&gt;

&lt;h2 id=&#34;基本使用&#34;&gt;基本使用&lt;/h2&gt;

&lt;p&gt;当源地址存在诸如&lt;code&gt;&amp;amp;&lt;/code&gt;或&lt;code&gt;*&lt;/code&gt;等其他shell特殊字符时，请使用单引号或者双引号将uri包含起来。&lt;/p&gt;

&lt;p&gt;在aria2的1.10.0版中，aria2对每台主机默认使用1个连接和20MB的分块大小，所以不论在-s参数中指定任何值，他都对一台主机只会建立一个连接，需要注意的一点是这个限制是针对单个主机的，当指定了多台主机时，它会对每台主机建立一个连接。如果要使用1.9.x版中的行为，则要使用-x16 -k1M。另见man页面的 &lt;code&gt;–max-connection-per-server&lt;/code&gt; 和 &lt;code&gt;–min-split-size&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;_aria2默认会在开始下载前预先分配文件空间以避免可能的文件碎片_，但这会在部分PC上带来50%-90%的cpu消耗。当使用环境为比较新的文件系统，例如ext4，btrfs，xfs或者NTFS时，作者推荐使用&lt;strong&gt;&lt;code&gt;–file-allocation=falloc&lt;/code&gt;&lt;/strong&gt;，这种方式会在瞬间完成大文件（数G）的空间分配并且不会带来额外的性能下降。&lt;/p&gt;

&lt;p&gt;如果你既没有使用cutting-edge文件系统，也没有使用linux，并且很在意系统性能，那么可以使用–file-allocation=none来关闭文件的预分配。&lt;/p&gt;

&lt;p&gt;如果你忘记了这些参数的全名或者含义，把-h放在选项或者词的前面，比如aria2c -hcrypt，这样aria2就会搜索crypt相关的选项并把他的帮助打印出来，如果aria2发现使用了-h，它会在打印出帮助信息后停止运行。&lt;/p&gt;

&lt;h2 id=&#34;基本用法&#34;&gt;基本用法&lt;/h2&gt;

&lt;h3 id=&#34;下载一个文件&#34;&gt;下载一个文件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c http://host/image.iso
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在1.10.0版中，aria2对每个host使用一个连接，你可以使用&lt;code&gt;–max-connection-per-server&lt;/code&gt; 或 &lt;code&gt;-x&lt;/code&gt;来修改&lt;/p&gt;

&lt;h3 id=&#34;使用两个连接从一个源下载文件&#34;&gt;使用两个连接从一个源下载文件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -x2 http://host/image.iso
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Ctrl+c&lt;/code&gt;可以中止当前的下载，在同样的目录运行同样的命令可以继续原来的下载，你设置可以修改&lt;code&gt;uri&lt;/code&gt;，如果他们指向的是同一个文件的话。&lt;/p&gt;

&lt;h3 id=&#34;使用两个连接下载文件&#34;&gt;使用两个连接下载文件：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -s2 http://host/image.iso http://mirror1/image.iso http://mirror2/image.iso
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：如果命令中uri的数量多于-s的值，如本例所示，aria2将会首先使用前两个uri，将第3个uri作为候补，如果前两个有一个下载失败，就会启用第3个&lt;/p&gt;

&lt;h3 id=&#34;从http或ftp服务器下载&#34;&gt;从http或ftp服务器下载：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c http://host1/file.zip ftp://host2/file.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;从任意源进行并行下载&#34;&gt;从任意源进行并行下载：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -Z http://host/file1 file2.torrent file3.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;如果仅仅指定本地磁盘上的torrent文件或者metalink-是不需要-z选项的-如&#34;&gt;如果仅仅指定本地磁盘上的torrent文件或者metalink，是不需要-Z选项的，如：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c file1.torrent file2.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;从文件中读取目的文件-并行下载&#34;&gt;从文件中读取目的文件，并行下载&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -ifiles.txt -j5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：-j参数指定了并发下载的数量，在输入文件中可以包含torrent文件和metelink&lt;br /&gt;
注：输入文件中支持添加参数，详见后续的“输入文件”章节&lt;/p&gt;

&lt;h3 id=&#34;退出时保存出错-未完成的下载-使用-session&#34;&gt;退出时保存出错/未完成的下载, 使用&lt;code&gt;session&lt;/code&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -ifiles.txt --save-session=out.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当ctrl+c或者aria2自己退出时，所有的错误，未完成的下载信息会保存到out.txt中，但通过aria2.addTorrent 和 aria2.addMetalink XML-RPC方式增加的下载不会保存。&lt;/p&gt;

&lt;h3 id=&#34;后续可以使用该文件继续未完成的下载&#34;&gt;后续可以使用该文件继续未完成的下载：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -i out.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;metalink相关下载示例&#34;&gt;Metalink相关下载示例&lt;/h2&gt;

&lt;h3 id=&#34;从远程metalink下载文件&#34;&gt;从远程metalink下载文件：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c http://host/file.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;从远程metalink下载文件-但在内存中处理metalink&#34;&gt;从远程metalink下载文件,但在内存中处理metalink：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --follow-metalink=mem http://host/file.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;通过本地metalink下载&#34;&gt;通过本地metalink下载：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -t10 --lowest-speed-limit=4000 file.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用5个server下载&#34;&gt;使用5个server下载&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -C5 file.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：当使用metalink时，-s参数不再起作用，需要使用-C选项&lt;/p&gt;

&lt;h3 id=&#34;通过多个本地metalink文件进行下载&#34;&gt;通过多个本地metalink文件进行下载：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c file1.metalink file2.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;打印metalink的内容&#34;&gt;打印metalink的内容&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -S file.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;通过序号下载指定文件&#34;&gt;通过序号下载指定文件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --select-file=1-4,8 -Mfile.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：可以通过-S选择来打印metalink文件的内容&lt;/p&gt;

&lt;h3 id=&#34;指定用户偏好从本地metalink下载文件&#34;&gt;指定用户偏好从本地metalink下载文件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --metalink-location=JP,US --metalink-version=1.1 --metalink-language=en-US file.metali
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;bittorrent相关下载&#34;&gt;BitTorrent相关下载&lt;/h2&gt;

&lt;h3 id=&#34;通过远程bittorrent文件下载&#34;&gt;通过远程BitTorrent文件下载&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c http://site/file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;通过远程bittorrent文件下载-但在内存中处理&#34;&gt;通过远程BitTorrent文件下载,但在内存中处理&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --follow-torrent=mem http://site/file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;通过本地torrent文件下载&#34;&gt;通过本地torrent文件下载:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -u40K /path/to/file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：-u, –max-upload-limit用来指定最大上传速度&lt;/p&gt;

&lt;h3 id=&#34;可以同时处理多个torrent文件&#34;&gt;可以同时处理多个torrent文件:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c /path/to/file1.torrent /path/to/file2.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;通过bittorrent-magnet-uri下载&#34;&gt;通过BitTorrent Magnet URI下载：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c &amp;quot;magnet:?xt=urn:btih:248D0A1CD08284299DE78D5C1ED359BB46717D8C&amp;amp;dn=aria2&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：需要将magnet的地址用单引号或者双引号引起来，因为里面包含’&amp;amp;&amp;lsquo;字符。当使用magnet时，强烈建议打开dht选项，–enable-dht
将metadata保存成.torrent文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --bt-save-metadata &amp;quot;magnet:?xt=urn:btih:248D0A1CD08284299DE78D5C1ED359BB46717D8C&amp;amp;dn=aria2&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个命令会将metadata信息保存在248d0a1cd08284299de78d5c1ed359bb46717d8c.torrent文件中&lt;/p&gt;

&lt;h3 id=&#34;自动调整peer节点数量&#34;&gt;自动调整peer节点数量&lt;/h3&gt;

&lt;p&gt;当所有节点的整体下载速度低于某个值时，aria2可以临时增加节点数量来获取更快的下载速率&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --bt-request-peer-speed-limit=200K file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;开启dht&#34;&gt;开启DHT&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --enable-dht http://site/file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：在1.7.2版本后，dht选项是被默认打开的。当aria2只处理http/ftp下载时，不会打开dht选项。当第一个torrent开始下载时，aria2进行DHT功能的初始化，然后一直运行到aria2退出。&lt;/p&gt;

&lt;h3 id=&#34;开启ipv6的dht&#34;&gt;开启ipv6的DHT&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --enable-dht6 --dht-listen-port=6881 --dht-listen-addr6=YOUR_GLOBAL_UNICAST_IPV6_ADDR --enable-async-dns6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：如果aria2在build时没有使用c-ares，则不需要–enable-async-dns6。aria2在ipv4和ipv6的dht中共享一些端口&lt;/p&gt;

&lt;h3 id=&#34;增加和删除tracker-uri&#34;&gt;增加和删除tracker URI：&lt;/h3&gt;

&lt;p&gt;下面这个例子将从file.torrent中移除所有的tracker的uri，然后使用”&lt;a href=&#34;http://tracker1/announce”&#34;&gt;http://tracker1/announce”&lt;/a&gt; 和 “&lt;a href=&#34;http://tracker2/announce”&#34;&gt;http://tracker2/announce”&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --bt-exclude-tracker=&amp;quot;*&amp;quot; --bt-tracker=&amp;quot;http://tracker1/announce,http://tracker2/announce&amp;quot; file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;加密&#34;&gt;加密&lt;/h3&gt;

&lt;p&gt;在默认情况下，aria2可以接收加密/非加密的连接，并且会首先尝试加密握手，如果失败才会去使用传统的BitTorrent握手
下面这个例子中，aria2将只通过加密的握手接受与建立连接。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --bt-require-crypto=true http://site/file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;存在两种加密方式，头加密和全连接加密。如果两种都可以被peer提供，aria2将默认使用头加密方式。如果要使用全连接加密，可以使用：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --bt-min-crypto-level=arc4 http://site/file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;打印torrent文件内容&#34;&gt;打印torrent文件内容&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -S file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;通过序号选择指定文件下载&#34;&gt;通过序号选择指定文件下载：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --select-file=1-4,8 -Tfile.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：index信息可以通过-S来获得&lt;/p&gt;

&lt;h3 id=&#34;修改监听端口&#34;&gt;修改监听端口&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --listen-port=6881-6883 file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：请确保指定端口可以进行tcp的上行和下行通信&lt;/p&gt;

&lt;h3 id=&#34;指定aria2完成下载后的停止条件&#34;&gt;指定aria2完成下载后的停止条件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --seed-time=120 --seed-ratio=1.0 file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：本例中，aria2会在下载完成后120分钟，或seed ratio达到1.0时退出程序&lt;/p&gt;

&lt;h3 id=&#34;设置上传速度&#34;&gt;设置上传速度&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --max-upload-limit=100K file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;seeding已经下载完成的文件&#34;&gt;Seeding已经下载完成的文件&lt;/h3&gt;

&lt;p&gt;可以使用-V选择来播种下载完成的文件，它会首先对文件进行分片的hash校验&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Seeding already downloaded file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果可以确定下载文件的正确性，可以使用–bt-seed-unverified选项来跳过文件的校验环节&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --bt-seed-unverified -d/path/to/dir file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;还可以同时播种多个torrent文件&#34;&gt;还可以同时播种多个torrent文件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --bt-seed-unverified -d/path/to/dir file1.torrent file2.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;通过index指定文件名&#34;&gt;通过index指定文件名&lt;/h3&gt;

&lt;p&gt;为了指定bt下载的文件名称，需要使用-S选线来查看torrent文件中的index信息，例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;idx|path/length
===+======================
  1|dist/base-2.6.18.iso
   |99.9MiB
---+----------------------
  2|dist/driver-2.6.18.iso
   |169.0MiB
---+----------------------
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下面的命令可以将dist/base-2.6.18.iso 保存为 /tmp/mydir/base.iso，同时将dist/driver-2.6.18.iso 保存成 /tmp/dir/driver.iso&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --dir=/tmp --index-out=1=mydir/base.iso --index-out=2=dir/driver.iso file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：当对http uri中的torrent文件使用–index-out是不成功，它只对本地的torrent文件有效。aria2也不会去记忆–index-out选项内容，在每次的继续下载或播种时都需要手工指明，而且如果没有该选项，它也不会给用户任何提醒，所以需要注意。&lt;/p&gt;

&lt;h3 id=&#34;为进行文件预览进行分片优先下载&#34;&gt;为进行文件预览进行分片优先下载&lt;/h3&gt;

&lt;p&gt;优先下载torrent中所有文件的前1MB&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --bt-prioritize-piece=head file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##使用代理服务器&lt;/p&gt;

&lt;h3 id=&#34;为所有协议-http-s-ftp-设定代理服务器&#34;&gt;为所有协议(HTTP(S)/FTP)设定代理服务器&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --all-proxy=&#39;http://proxy:8080&#39; http://host/file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：–all-proxy选项可以被特定的协议选项覆盖，如–http-proxy, –https-proxy 和 –ftp-proxy&lt;/p&gt;

&lt;h3 id=&#34;设置http代理&#34;&gt;设置http代理&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --http-proxy=&#39;http://proxy:8080&#39; http://host/file
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用需要认证的代理&#34;&gt;使用需要认证的代理&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --http-proxy=&#39;http://proxy:8080&#39; --http-proxy-user=&#39;username&#39; --http-proxy-passwd=&#39;password&#39; http://host/file
aria2c --http-proxy=&#39;http://username:password@proxy:8080&#39; http://host/file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：username and password 需要进行%转码，如过username是’myid@domain’，则转码后的结果为：’myid%40domain’。&lt;/p&gt;

&lt;h2 id=&#34;高级的http特性&#34;&gt;高级的http特性：&lt;/h2&gt;

&lt;h3 id=&#34;导入cookie&#34;&gt;导入cookie&lt;/h3&gt;

&lt;p&gt;导入Mozilla/Firefox(1.x/2.x) 和 Netscape格式的cookie&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --load-cookies=cookies.txt http://host/file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;导入Firefox3格式的cookie&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --load-cookies=cookies.sqlite http://host/file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;被浏览器或其他程序继续下载&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c -c -s2 http://host/partiallydownloadedfile.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;其他高级特性&#34;&gt;其他高级特性&lt;/h2&gt;

&lt;h3 id=&#34;下载速度限制&#34;&gt;下载速度限制&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --max-download-limit=100K http://host/file
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用-v修复受损的下载&#34;&gt;使用-V修复受损的下载&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -V file.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：这个选项只适用于BitTorrent或者带有校验的metalink&lt;/p&gt;

&lt;h3 id=&#34;当下载速度下于某个特定值时放弃下载&#34;&gt;当下载速度下于某个特定值时放弃下载&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --lowest-speed-limit=10K file.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;uri的参数化支持&#34;&gt;URI的参数化支持&lt;/h3&gt;

&lt;p&gt;可以使用大括号来表达一组列表&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c -P http://{host1,host2,host3}/file.iso
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以使用[]来表示一个数字序列&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c -Z -P http://host/image[000-100].png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：当所有的URI指向不同的文件时，需要使用-Z选项&lt;/p&gt;

&lt;p&gt;甚至可以指定步长&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c -Z -P http://host/image[A-Z:2].png
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;时间戳&#34;&gt;时间戳&lt;/h3&gt;

&lt;p&gt;保留源文件时间戳&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c -R http://host/file.iso
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下载完成后执行特定命令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --on-download-complete=COMMAND http://example.org/file.iso
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;另见：&lt;code&gt;–on-download-error&lt;/code&gt;, &lt;code&gt;–on-download-start&lt;/code&gt; 和 &lt;code&gt;–on-download-stop&lt;/code&gt;，或者执行&lt;code&gt;aria2c -h#hook&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;写入/dev/null&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c -d /dev -o null --allow-overwrite=true http://example.org/file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;–allow-overwrite=true&lt;/code&gt;是为了避免aria2重命名已有的/dev/null&lt;/p&gt;

&lt;h3 id=&#34;输入文件&#34;&gt;输入文件&lt;/h3&gt;

&lt;p&gt;输入文件中可以包括一系列的URI地址，也可以针对同一个资源设置多个URI：不同的URI写在一行并使用tab分割。&lt;br /&gt;
输入文件的每一行都被当作aria2的命令行参数，因此可以受到-Z和-P选项影响&lt;br /&gt;
另外，选项也可以在每行URI的后面设置，更详尽的描述可以在man page的输入文件部分得到。这种选择的含义与命令行选项的含义一致，不过只适用在他们跟随的那个URI上。&lt;/p&gt;

&lt;p&gt;如下，一个uri文件名为uri.txt，其内容如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://server/file.iso http://mirror/file.iso
  dir=/iso_images
  out=file.img

http://foo/bar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果aria2使用 &lt;code&gt;-i uri.txt -d /tmp&lt;/code&gt;,&lt;br /&gt;
那么file.iso就会被保存为/iso_images/file.img，
它的下载源为&lt;a href=&#34;http://server/file.iso&#34;&gt;http://server/file.iso&lt;/a&gt; 和 &lt;a href=&#34;http://mirror/file.iso&#34;&gt;http://mirror/file.iso&lt;/a&gt; ；
而bar文件则是从&lt;a href=&#34;http://foo/bar&#34;&gt;http://foo/bar&lt;/a&gt; 下载并且保存为 /tmp/bar&lt;/p&gt;

&lt;p&gt;*[uri]: 远程或者本地文件地址&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu常用软件集合</title>
      <link>http://wixb50.github.io/2015/11/12/ubuntu%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E9%9B%86%E5%90%88/</link>
      <pubDate>Thu, 12 Nov 2015 10:23:25 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/11/12/ubuntu%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E9%9B%86%E5%90%88/</guid>
      <description>

&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;

&lt;!-- MarkdownTOC --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#broswer&#34;&gt;Broswer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#editor&#34;&gt;Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#git&#34;&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#美化&#34;&gt;美化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#添加字体&#34;&gt;添加字体&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sql&#34;&gt;SQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#思维导图&#34;&gt;思维导图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#影音&#34;&gt;影音&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fq&#34;&gt;FQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#虚拟机&#34;&gt;虚拟机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#linux-wps&#34;&gt;Linux WPS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#develop&#34;&gt;Develop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#latex&#34;&gt;LaTex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#aria2下载工具&#34;&gt;Aria2下载工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tldr命令工具&#34;&gt;tldr命令工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#终端工具terminator&#34;&gt;终端工具Terminator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#wine-18&#34;&gt;Wine 1.8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- /MarkdownTOC --&gt;

&lt;h3 id=&#34;broswer&#34;&gt;Broswer&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.google.cn/intl/zh-CN/chrome/browser/desktop/index.html&#34;&gt;chrome&lt;/a&gt; 下载deb包安装，同步自己的chrome配置&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;editor&#34;&gt;Editor&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The Most Intelligent Java IDE:&lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;Intellij IDEA&lt;/a&gt;&lt;br /&gt;
1.安装配置好JDK环境,下载tar.gz文件,解压到&lt;code&gt;tar -zxvf ideaIU-14.tar.gz -C /usr/local/intellijIDEA(自己命名)&lt;/code&gt;;&lt;br /&gt;
2.进入安装目录下的bin目录，执行&lt;code&gt;./idea.sh&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;几个license：
(1)
key:IDEA
value:61156-YRN2M-5MNCN-NZ8D2-7B4EW-U12L4
(2)
key:huangwei
value:97493-G3A41-0SO24-W57LI-Y2UGI-JGTU2
(3)
key:itey
value:91758-T1CLA-C64F3-T7X5R-A7YDO-CRSN1
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sublimetext.com/3&#34;&gt;Sublime Text 3&lt;/a&gt; 下载deb包安装&lt;/li&gt;
&lt;li&gt;神一样的&lt;a href=&#34;http://www.vim.org/&#34;&gt;Vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/emacs/&#34;&gt;Emacs&lt;/a&gt; How to &lt;a href=&#34;http://ubuntuhandbook.org/index.php/2014/10/emacs-24-4-released-install-in-ubuntu-14-04/&#34;&gt;Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;简单的MD编辑器&lt;a href=&#34;http://sourceforge.net/projects/retext/&#34;&gt;Retext&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;git&#34;&gt;Git&lt;/h3&gt;

&lt;p&gt;安装&lt;code&gt;sudo apt-get install git&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;git客户端&lt;a href=&#34;http://www.syntevo.com/smartgit/&#34;&gt;SmartGit&lt;/a&gt; 建议直接命令行&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;删除&lt;code&gt;.smartgit&lt;/code&gt;下面的&lt;code&gt;settings.xml&lt;/code&gt;即可重新使用1个月。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;美化&#34;&gt;美化&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;默认使用Unity桌面&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;unity-tweak-tool&lt;br /&gt;
安装&lt;code&gt;sudo apt-get install unity-tweak-tool&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;也可以通过安装ubuntu-tweak来实现主题更换&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:tualatrix/ppa
sudo apt-get update
sudo apt-get install ubuntu-tweak
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;主题网址&lt;a href=&#34;http://gnome-look.org/&#34;&gt;http://gnome-look.org/&lt;/a&gt; 将解压的主题文件夹拷贝到/usr/share/themes/目录下,然后使用&lt;code&gt;unity-tweak-tool&lt;/code&gt;选择;&lt;/li&gt;
&lt;li&gt;icon网址&lt;a href=&#34;https://github.com/NitruxSA/ardis-icon-theme&#34;&gt;https://github.com/NitruxSA/ardis-icon-theme&lt;/a&gt; 将解压的主题文件夹拷贝到/usr/share/icons/目录下,然后使用&lt;code&gt;unity-tweak-tool&lt;/code&gt;选择;或者直接命令安装再设置;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;添加字体&#34;&gt;添加字体&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ubuntu添加字体非常简单，只需要在～目录下新建&lt;code&gt;.fonts&lt;/code&gt;文件夹，然后把后缀为&lt;code&gt;.ttf&lt;/code&gt;字体文件复制其中，就自动加入了。可以使用软件查看。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;sql&#34;&gt;SQL&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Mysql客户端 &lt;a href=&#34;http://dev.mysql.com/downloads/workbench/&#34;&gt;Workbench&lt;/a&gt; 下载deb安装&lt;/li&gt;
&lt;li&gt;Redis客户端 &lt;a href=&#34;http://redisdesktop.com/&#34;&gt;Redis Desktop Manager&lt;/a&gt; 下载deb安装&lt;/li&gt;
&lt;li&gt;Mongo客户端 &lt;a href=&#34;http://robomongo.org/&#34;&gt;Robomongo&lt;/a&gt; 下载deb安装&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;思维导图&#34;&gt;思维导图&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;最流行的思维导图 &lt;a href=&#34;http://www.xmind.net/cn/&#34;&gt;XMind&lt;/a&gt; 下载deb安装&lt;/li&gt;
&lt;li&gt;百度在线脑图 &lt;a href=&#34;http://naotu.baidu.com/&#34;&gt;百度脑图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;影音&#34;&gt;影音&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VLC Media Player&lt;/code&gt; 软件商店安装&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;fq&#34;&gt;FQ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;开放网络客户端 &lt;a href=&#34;https://getlantern.org/&#34;&gt;Lantern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shadowsocks.org/en/index.html&#34;&gt;Shadowsocks&lt;/a&gt; 装好之后还要设置浏览器代理&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;安装PPA is for Ubuntu &amp;gt;= 14.04.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:hzwhuang/ss-qt5
sudo apt-get update
sudo apt-get install shadowsocks-qt5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置&lt;strong&gt;火狐浏览器&lt;/strong&gt;，代理设置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;选择Manual Proxy Configuration，在Socks Host写入127.0.0.1，Port 1080。下面选Socks v5。点OK确认。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以代理模式启动&lt;strong&gt;Chrome&lt;/strong&gt;命令如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;google-chrome --proxy-server=socks5://127.0.0.1:1080
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;[NOTICE] : Chrome推荐使用&lt;a href=&#34;https://github.com/FelisCatus/SwitchyOmega/releases&#34;&gt;SwitchyOmega&lt;/a&gt;插件进行设置。自动规则：&lt;a href=&#34;https://github.com/FelisCatus/SwitchyOmega/wiki/GFWList&#34;&gt;wiki-GEWList&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;虚拟机&#34;&gt;虚拟机&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;开源&lt;a href=&#34;https://www.virtualbox.org/wiki/Downloads&#34;&gt;VirtualBox&lt;/a&gt; 下载deb安装&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;linux-wps&#34;&gt;Linux WPS&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.wps.cn/&#34;&gt;WPS官网&lt;/a&gt;下载linux下的安装包，下载&lt;a href=&#34;http://pan.baidu.com/s/1o7wTo7o&#34;&gt;Symbol 字体安装包&lt;/a&gt;安装&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;#安装wps
sudo dpkg -i wps-office_9.1.0.4975-a19p1_amd64.deb
#安装symbol字体包
sudo dpkg -i symbol-fonts_1.2_all.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;develop&#34;&gt;Develop&lt;/h3&gt;

&lt;p&gt;Frontend：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node&lt;/a&gt; 最好编译安装 &lt;a href=&#34;https://linux.cn/article-5766-1.html&#34;&gt;install-tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;null-link&#34;&gt;npm&lt;/a&gt; node包管理器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;null-link&#34;&gt;bower&lt;/a&gt; 前端开发包管理器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;null-link&#34;&gt;gulp&lt;/a&gt; 构建工具&lt;/li&gt;
&lt;li&gt;[grunt-cli]() 比较老的构建工具&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Backend：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[Go]() 解压存放&lt;code&gt;/usr/local/go&lt;/code&gt;,配置好&lt;code&gt;GOROOT、GOPATH&lt;/code&gt;和path环境。&lt;code&gt;GOPATH&lt;/code&gt;最好一个就够了。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;GoTools：&lt;code&gt;gocode&lt;/code&gt;代码自动化提示工具。&lt;code&gt;godep&lt;/code&gt;go包管理器。&lt;code&gt;goconvey&lt;/code&gt;go测试工具。
Tips：如需sudo也支持go命令,执行链接命令：&lt;code&gt;sudo ln -s /usr/local/go/bin/go /usr/bin/go&lt;/code&gt;。&lt;br /&gt;
Personal：&lt;code&gt;GOROOT&lt;/code&gt;配置在&lt;code&gt;/etc/profile&lt;/code&gt;内，&lt;code&gt;GOPATH&lt;/code&gt;配置在&lt;code&gt;～/.bashrc&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;[Python]() 包管理器安装python(2.X版本)、python3(3.X版本)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;python包管理器pip：&lt;code&gt;sudo apt-get install python-pip&lt;/code&gt;&lt;br /&gt;
python包管理器pip3：&lt;code&gt;sudo apt-get install python3-pip&lt;/code&gt;&lt;br /&gt;
python虚拟环境：&lt;code&gt;sudo pip install virtualenv&lt;/code&gt;，参考&lt;a href=&#34;https://segmentfault.com/a/1190000004079979&#34;&gt;virtualenv 和 virtualenvwrapper 实践&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;[gradle]() java包管理器,构建工具&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Server：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[Docker]() 容器化服务器&lt;/li&gt;
&lt;li&gt;[vagrant]() 虚拟机管理工具&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;latex&#34;&gt;LaTex&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;TexLive2015安装&lt;/p&gt;

&lt;p&gt;下载地址：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://mirrors.ctan.org/systems/texlive/Images/texlive2015.iso&#34;&gt;官方镜像&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mirrors.ustc.edu.cn/CTAN/systems/texlive/Images/texlive2015.iso&#34;&gt;USTC镜像&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;挂载ISO镜像&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mount -o loop texlive2015.iso  /mnt/
cd /mnt
sudo ./install-tl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;出现选项后，输入 I 直接安装（也可以更改选项）。不出意外的话，5分钟应该就OK了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;环境变量&lt;/strong&gt;&lt;br /&gt;
在当前用户的 ~/.bashrc 中加入如下语句：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# TeX Live 2015
export MANPATH=${MANPATH}:/usr/local/texlive/2015/texmf-dist/doc/man
export INFOPATH=${INFOPATH}:/usr/local/texlive/2015/texmf-dist/doc/info
export PATH=${PATH}:/usr/local/texlive/2015/bin/x86_64-linux  #建议还是把这个配置到/etc/profile里面去，这样texstudio打开能够识别

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面的建议如果出现找不到tex环境时候可以用一下。&lt;br /&gt;
&lt;strong&gt;卸载ISO镜像&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd
$ sudo umount /mnt/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://seisman.info/install-texlive-under-linux.html&#34;&gt;参考文档&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;TexStudio&lt;br /&gt;
&lt;a href=&#34;http://texstudio.sourceforge.net/&#34;&gt;官网&lt;/a&gt;下载deb安装包安装即可&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;aria2下载工具&#34;&gt;Aria2下载工具&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://aria2.sourceforge.net/&#34;&gt;官网介绍&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install aria2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;tldr命令工具&#34;&gt;tldr命令工具&lt;/h3&gt;

&lt;p&gt;下载go client的&lt;code&gt;platform binaries&lt;/code&gt;的&lt;code&gt;deb&lt;/code&gt;包安装：&lt;a href=&#34;https://github.com/tldr-pages/tldr&#34;&gt;github主页&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg -i tldr_0.1.0_amd64.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;终端工具terminator&#34;&gt;终端工具Terminator&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;安装&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install terminator
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;然后利用 Debian 的重新配置命令选择默认终端：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo update-alternatives --config x-terminal-emulator
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;terminator配置文件在~/.config/terminator/config 可以通过这个配置文件配置terminator的字体和颜色.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;font = Monaco 10  #设置体字
background_color = &amp;quot;#204070&amp;quot; # 背景颜色
foreground_color = &amp;quot;#F0F0F0&amp;quot; # 字体颜色
cursor_blink = True          # 设置光标
scrollbar_position = disabled # 禁用滚动条
titlebars = no # 禁用标题栏
background_darkness = 0.4
background_type = transparent # 背景类型可以设置为图片
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更多配置见：&lt;code&gt;man terminator_config&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;快捷键&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;F11 #Toggle fullscreen
Ctrl + Shift+ O #Split terminals horizontally
Ctrl + Shift+ E #Split terminals vertically
Ctrl + Shift+ W #Close current Panel
Ctrl + Shift+ T #Open new tab

Ctrl+Shift+C 复制
Ctrl+Shift+V 粘贴
Ctrl+Shift+N 或者 Ctrl+Tab 在分割的各窗口之间切换
Ctrl+Shift+X 将分割的某一个窗口放大至全屏使用
Ctrl+Shift+Z 从放大至全屏的某一窗口回到多窗格界面

Alt + ↑ #Move to the terminal above the current one
Alt + ↓ #Move to the terminal below the current one
Alt + ← #Move to the terminal left of the current one
Alt + → #Move to the terminal right of the current one
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;一个不错的配置(可将&lt;code&gt;palette&lt;/code&gt;注释,采用默认的配色方案)&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;[global_config]
  title_transmit_bg_color = &amp;quot;#d30102&amp;quot;
  focus = system
  suppress_multiple_term_dialog = True
[keybindings]
[profiles]
  [[default]]
    palette = &amp;quot;#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#586e75:#657b83:#839496:#6c71c4:#93a1a1:#fdf6e3&amp;quot;
    copy_on_selection = True
    background_image = None
    background_darkness = 0.85
    background_type = transparent
    use_system_font = False
    cursor_color = &amp;quot;#eee8d5&amp;quot;
    foreground_color = &amp;quot;#839496&amp;quot;
    show_titlebar = False
    font = Ubuntu Mono 14
    background_color = &amp;quot;#002b36&amp;quot;
  [[solarized-dark]]
    palette = &amp;quot;#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#586e75:#657b83:#839496:#6c71c4:#93a1a1:#fdf6e3&amp;quot;
    background_color = &amp;quot;#002b36&amp;quot;
    background_image = None
    cursor_color = &amp;quot;#eee8d5&amp;quot;
    foreground_color = &amp;quot;#839496&amp;quot;
  [[solarized-light]]
    palette = &amp;quot;#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#586e75:#657b83:#839496:#6c71c4:#93a1a1:#fdf6e3&amp;quot;
    background_color = &amp;quot;#fdf6e3&amp;quot;
    background_image = None
    cursor_color = &amp;quot;#002b36&amp;quot;
    foreground_color = &amp;quot;#657b83&amp;quot;
[layouts]
  [[default]]
    [[[child1]]]
      type = Terminal
      parent = window0
      profile = default
    [[[window0]]]
      type = Window
      parent = &amp;quot;&amp;quot;
[plugins]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;透明高亮很Geek.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;右键目录打开&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.安装工具：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install nautilus-actions -y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.启动改工具,Unity中输入nautilus-actions-config-tool,&lt;/p&gt;

&lt;p&gt;3.见&lt;a href=&#34;http://www.ikey4u.com/linux-terminator-settings/&#34;&gt;配置教程&lt;/a&gt;  重要的启动参数：&lt;code&gt;--working-directory=%D/%w&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;4.重启生效&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;参考资料&lt;br /&gt;
&lt;a href=&#34;http://blog.codinglabs.org/articles/getting-started-with-ubuntu.html&#34;&gt;开始使用Ubuntu作为工作环境&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;wine-1-8&#34;&gt;Wine 1.8&lt;/h3&gt;

&lt;p&gt;1、对于 64 位系统，需要开启 32 位架构支持：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg --add-architecture i386 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2、添加 Wine 官方 PPA：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:wine/wine-builds 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3、PPA 添加完成后，我们先刷新包缓存再安装 Wine 1.8：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update 
sudo apt-get install --install-recommends winehq-devel 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你安装有老版本 Wine，执行上述命令时会自动被替换更新。&lt;/p&gt;

&lt;p&gt;4、安装完成后，可以使用如下命令来初始化 Wine 1.8 配置：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;winecfg 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NOTE:&lt;a href=&#34;https://wiki.winehq.org/Gecko&#34;&gt;手动安装Gecko&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>