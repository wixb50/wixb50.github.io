<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Command on Wixb blog</title>
    <link>http://wixb50.gitcafe.io/categories/command/</link>
    <description>Recent content in Command on Wixb blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wixb50@gmail.com (Wixb)</managingEditor>
    <webMaster>wixb50@gmail.com (Wixb)</webMaster>
    <copyright>(c) 2015 wixb.All rights reserved.</copyright>
    <lastBuildDate>Sat, 07 Nov 2015 22:07:33 +0800</lastBuildDate>
    <atom:link href="http://wixb50.gitcafe.io/categories/command/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ubuntu常用命令集合</title>
      <link>http://wixb50.gitcafe.io/2015/11/07/ubuntu%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%9B%86%E5%90%88/</link>
      <pubDate>Sat, 07 Nov 2015 22:07:33 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.gitcafe.io/2015/11/07/ubuntu%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%9B%86%E5%90%88/</guid>
      <description>

&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;

&lt;!-- MarkdownTOC --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#shutdown-命令&#34;&gt;shutdown 命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ln-命令&#34;&gt;ln 命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#linux下怎样设置ssh无密码登录&#34;&gt;linux下怎样设置ssh无密码登录&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1生成公钥和私钥&#34;&gt;1.生成公钥和私钥&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2导入公钥到认证文件更改权限&#34;&gt;2.导入公钥到认证文件,更改权限&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#21-导入本机&#34;&gt;2.1 导入本机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#22-导入要免密码登录的服务器&#34;&gt;2.2 导入要免密码登录的服务器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#23-在服务器上更改权限&#34;&gt;2.3 在服务器上更改权限&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3测试&#34;&gt;3.测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dpkg命令&#34;&gt;dpkg命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#apt命令&#34;&gt;apt命令&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#软件安装后相关文件位置&#34;&gt;软件安装后相关文件位置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#设置su密码的命令&#34;&gt;设置su密码的命令&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#使用sudo&#34;&gt;使用sudo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- /MarkdownTOC --&gt;

&lt;h2 id=&#34;shutdown-命令&#34;&gt;shutdown 命令&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;shutdown –help  #可以查看shutdown命令如何使用，当然也可以使用man shutdown命令。
shutdown -h now #现在立即关机
shutdown -r now #现在立即重启
shutdown -r +3 #三分钟后重启
shutdown -h +3 “The System will shutdown after 3 minutes” #提示使用者将在三分钟后关机
shutdown -r 20:23 #在20：23时将重启计算机
shutdown -r 20:23 &amp;amp; #可以将在20：23时重启的任务放到后台去，用户可以继续操作终端
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ln-命令&#34;&gt;ln 命令&lt;/h2&gt;

&lt;p&gt;功能是为某一个文件或目录在另外一个位置建立一个同步的链接：&lt;/p&gt;

&lt;p&gt;这里有两点要注意：ln的链接又 软链接和硬链接两种，软链接就是ln –s ** **，它只会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，硬链接ln ** **，没有参数-s， 它会在你选定的位置上生成一个和源文件大小相同的文件。
&amp;gt;这个命令最常用的参数是-s，具体用法是(软链接)：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo ln -s 源文件 目标文件&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;删除链接&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;rm -rf   symbolic_name   注意不是rm -rf   symbolic_name/&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;linux下怎样设置ssh无密码登录&#34;&gt;linux下怎样设置ssh无密码登录&lt;/h2&gt;

&lt;p&gt;原理说明
&amp;gt;密匙认证需要依靠密匙，&lt;br /&gt;
1.首先创建一对密匙（包括公匙和密匙，并且用公匙加密的数据只能用密匙解密），并把公匙放到需要远程服务器上。&lt;br /&gt;
2.这样当登录远程 服务器时，客户端软件就会向服务器发出请求，请求用你的密匙进行认证。&lt;br /&gt;
3.服务器收到请求之后，先在你在该服务器的宿主目录下寻找你的公匙，然后检查该公匙是 否是合法，如果合法就用公匙加密一随机数（即所谓的challenge）并发送给客户端软件。&lt;br /&gt;
4.客户端软件收到 “challenge”之后就用私匙解密再把它发送给服务器。因为用公匙加密的数据只能用密匙解密，服务器经过比较就可以知道该客户连接的合法性。&lt;/p&gt;

&lt;h3 id=&#34;1-生成公钥和私钥&#34;&gt;1.生成公钥和私钥&lt;/h3&gt;

&lt;p&gt;Shell代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh-keygen -t rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;默认在 ~/.ssh目录生成两个文件：&lt;br /&gt;
　id_rsa      ：私钥&lt;br /&gt;
　id_rsa.pub  ：公钥&lt;/p&gt;

&lt;h3 id=&#34;2-导入公钥到认证文件-更改权限&#34;&gt;2.导入公钥到认证文件,更改权限&lt;/h3&gt;

&lt;h4 id=&#34;2-1-导入本机&#34;&gt;2.1 导入本机&lt;/h4&gt;

&lt;p&gt;Shell代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat ~/.ssh/id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys  
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-2-导入要免密码登录的服务器&#34;&gt;2.2 导入要免密码登录的服务器&lt;/h4&gt;

&lt;p&gt;方法一：
首先将公钥复制到服务器，Shell代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;scp ~/.ssh/id_rsa.pub xxx@host:~/id_rsa.pub  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后，将公钥导入到认证文件，这一步的操作在服务器上进行，Shell代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat ~/id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;方法二：
直接用命令将公钥添加到远程服务器上去&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat ~/.ssh/id_rsa.pub | ssh root@[your.ip.address.here] &amp;quot;cat &amp;gt;&amp;gt; ~/.ssh/authorized_keys&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以执行测试登录，如果无任何错误提示，可以输密码登录，但就是不能无密码登录，则执行下步。&lt;/p&gt;

&lt;h4 id=&#34;2-3-在服务器上更改权限&#34;&gt;2.3 在服务器上更改权限&lt;/h4&gt;

&lt;p&gt;Shell 代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod 700 ~/.ssh
chmod 600 ~/.ssh/authorized_keys 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-测试&#34;&gt;3.测试&lt;/h3&gt;

&lt;p&gt;执行Shell&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh xxx@host
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第一次登录可能需要yes确认，之后就可以直接登录了。&lt;/p&gt;

&lt;h2 id=&#34;dpkg命令&#34;&gt;dpkg命令&lt;/h2&gt;

&lt;p&gt;deb是debian linus的安装格式，跟red hat的rpm非常相似，最基本的安装命令是：dpkg -i file.deb或者直接双击此文件。&lt;br /&gt;
dpkg 是Debian Package的简写，是为Debian专门开发的套件管理系统，方便软件的安装、更新及移除。所有源自Debian的Linux发行版都使用dpkg，例如Ubuntu、Knoppix 等。
以下是一些 Dpkg 的普通用法：&lt;br /&gt;
1. dpkg -i&lt;br /&gt;
        安装一个 Debian 软件包，如你手动下载的文件。&lt;br /&gt;
2. dpkg -c&lt;br /&gt;
        列出包的内容。&lt;br /&gt;
3. dpkg -I&lt;br /&gt;
       从 中提取包裹信息。&lt;br /&gt;
4. dpkg -r&lt;br /&gt;
        移除一个已安装的包裹。&lt;br /&gt;
5. dpkg -P&lt;br /&gt;
      完全清除一个已安装的包裹。和 remove 不同的是，remove 只是删掉数据和可执行文件，purge 另外还删除所有的配制文件。&lt;br /&gt;
6. dpkg -L&lt;br /&gt;
      列出 安装的所有文件清单。同时请看 dpkg -c 来检查一个 .deb 文件的内容。&lt;br /&gt;
7. dpkg -s&lt;br /&gt;
      显示已安装包裹的信息。同时请看 apt-cache 显示 Debian 存档中的包裹信息，以及 dpkg -I 来显示从一个 .deb 文件中提取的包裹信息。&lt;br /&gt;
8. dpkg-reconfigure&lt;br /&gt;
      重新配制一个已经安装的包裹，如果它使用的是 debconf (debconf 为包裹安装提供了一个统一的配制界面)。&lt;/p&gt;

&lt;h2 id=&#34;apt命令&#34;&gt;apt命令&lt;/h2&gt;

&lt;h3 id=&#34;软件安装后相关文件位置&#34;&gt;软件安装后相关文件位置&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载的软件存放位置&lt;/p&gt;

&lt;p&gt;/var/cache/apt/archives&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装后软件默认位置&lt;/p&gt;

&lt;p&gt;/usr/share&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;可执行文件位置&lt;/p&gt;

&lt;p&gt;/usr/bin&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;配置文件位置&lt;/p&gt;

&lt;p&gt;/etc&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;lib文件位置&lt;/p&gt;

&lt;p&gt;/usr/lib&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;**其他几个和apt-get相关的目录:  **&lt;/p&gt;

&lt;p&gt;/var/lib/dpkg/available&lt;br /&gt;
文件的内容是软件包的描述信息, 该软件包括当前系统所使用的 Debian 安装源中的所有软件包,其中包括当前系统中已安装的和未安装的软件包.&lt;/p&gt;

&lt;p&gt;/var/cache/apt/archives&lt;br /&gt;
目录是在用 apt-get install 安装软件时，软件包的临时存放路径&lt;/p&gt;

&lt;p&gt;/etc/apt/sources.list&lt;br /&gt;
存放的是软件源站点, 当你执行 sudo apt-get install xxx 时，Ubuntu 就去这些站点下载软件包到本地并执行安装&lt;/p&gt;

&lt;p&gt;/var/lib/apt/lists&lt;br /&gt;
使用apt-get update命令会从/etc/apt/sources.list中下载软件列表，并保存到该目录&lt;/p&gt;

&lt;h2 id=&#34;设置su密码的命令&#34;&gt;设置su密码的命令&lt;/h2&gt;

&lt;p&gt;Ubuntu安装之默认状态下是不能使用su命令了，如果我们要使用su命令需要把root设置一个密码这样就可以使用su命令了。&lt;/p&gt;

&lt;h3 id=&#34;使用sudo&#34;&gt;使用sudo&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo passwd  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;系统提示输入密码，即安装时的用户密码，然后，系统提示输入两次新密码，输入完毕后，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;su  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;即可进入su，具备了相应的权限了.&lt;/p&gt;

&lt;p&gt;[NOTICE] : 在terminal中利用su命令就可以切换到root用户了。&lt;br /&gt;
注：su和sudo的区别是：&lt;br /&gt;
1). su的密码是root的密码，而sudo的密码是用户的密码；&lt;br /&gt;
2). su直接将身份变成root，而sudo是以用户登录后以root的身份运行命令，不需要知道root密码；&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>