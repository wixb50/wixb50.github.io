<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Develop on Wixb blog</title>
    <link>http://wixb50.gitcafe.io/categories/develop/</link>
    <description>Recent content in Develop on Wixb blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wixb50@gmail.com (Wixb)</managingEditor>
    <webMaster>wixb50@gmail.com (Wixb)</webMaster>
    <copyright>(c) 2015 wixb.All rights reserved.</copyright>
    <lastBuildDate>Sat, 27 Feb 2016 09:26:17 +0800</lastBuildDate>
    <atom:link href="http://wixb50.gitcafe.io/categories/develop/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Github Star</title>
      <link>http://wixb50.gitcafe.io/2016/02/27/github-star/</link>
      <pubDate>Sat, 27 Feb 2016 09:26:17 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.gitcafe.io/2016/02/27/github-star/</guid>
      <description>

&lt;h2 id=&#34;docker&#34;&gt;Docker&lt;/h2&gt;

&lt;h3 id=&#34;应用&#34;&gt;应用&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/huichen/zerg&#34;&gt;基于docker的分布式爬虫服务&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;markdown&#34;&gt;MarkDown&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/geekcompany/ResumeSample&#34;&gt;程序员简历MD模板&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;tex&#34;&gt;Tex&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/billryan/resume/tree/zh_CN&#34;&gt;一个简洁优雅的 XeLaTeX 简历模板&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;frontend&#34;&gt;Frontend&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/AutumnsWind/Front-end-tutorial&#34;&gt;最全的资源教程-前端涉及的所有知识体系&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>文章收藏</title>
      <link>http://wixb50.gitcafe.io/2016/02/27/%E6%96%87%E7%AB%A0%E6%94%B6%E8%97%8F/</link>
      <pubDate>Sat, 27 Feb 2016 09:25:17 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.gitcafe.io/2016/02/27/%E6%96%87%E7%AB%A0%E6%94%B6%E8%97%8F/</guid>
      <description>

&lt;h2 id=&#34;opensource&#34;&gt;OpenSource&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MjM5MzM3NjM4MA==&amp;amp;mid=405458525&amp;amp;idx=1&amp;amp;sn=55df62ed6bd01823806a0f1823f3d09c&amp;amp;scene=1&amp;amp;srcid=02264HbqiU0NKglMR5FpYrxr&amp;amp;key=710a5d99946419d952b51286bb476ae852980381752236f35f6efed2d81774806f1a7c345fa76ff83cf2e78cf079c5ea&amp;amp;ascene=0&#34;&gt;科技公司钟爱的50款开源工具&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;python&#34;&gt;Python&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://codingpy.com/article/the-idiomatic-way-to-merge-dicts-in-python/?hmsr=toutiao.io&amp;amp;utm_medium=toutiao.io&amp;amp;utm_source=toutiao.io&#34;&gt;怎样合并字典最符合Python语言习惯&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;react&#34;&gt;React&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dingyiming/learn-Js-react/issues/1&#34;&gt;【资料汇总】React (中文)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;javascript&#34;&gt;JavaScript&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://web.jobbole.com/85265/&#34;&gt;JavaScript 开发最佳实践&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;web&#34;&gt;Web&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.brucefeng.info/post/brower-server-msg&#34;&gt;浏览器与服务器的消息通信&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.dou-bi.com/dbwz-3/&#34;&gt;教你申请.tk/.ml/.cf/.gq/.ga等免费域名&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;sql&#34;&gt;SQL&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000004443840#articleHeader0&#34;&gt;关系型数据库树形结构的设计&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;docker&#34;&gt;Docker&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qinghua.github.io/kubernetes-in-mesos-1/&#34;&gt;如果有10000台机器，你想怎么玩?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Markdown简明语法教程</title>
      <link>http://wixb50.gitcafe.io/2015/11/05/markdown%E7%AE%80%E6%98%8E%E8%AF%AD%E6%B3%95%E6%95%99%E7%A8%8B/</link>
      <pubDate>Thu, 05 Nov 2015 13:35:17 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.gitcafe.io/2015/11/05/markdown%E7%AE%80%E6%98%8E%E8%AF%AD%E6%B3%95%E6%95%99%E7%A8%8B/</guid>
      <description>

&lt;h1 id=&#34;markdown简明语法教程&#34;&gt;Markdown简明语法教程&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;本教程基于Markdown语言编写，项目地址位于&lt;a href=&#34;https://github.com/Melo618/Simple-Markdown-Guide&#34;&gt;Simple-Markdown-Guide&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;本教程定位为基础教程，更加详细的用法可参考其他资料。&lt;/li&gt;
&lt;li&gt;本教程中代码块内的代码为Markdown的语法。&lt;/li&gt;
&lt;li&gt;本教程中部分语法使用的是&lt;a href=&#34;https://help.github.com/articles/github-flavored-markdown/&#34;&gt;GitHub Flavored Markdown&lt;/a&gt;，GFM语法与标准语法在不同环境中存在解析差异，本教程在使用时会加以说明。&lt;/li&gt;
&lt;li&gt;推荐使用Haroopad(Win)、MarkdownPad(Win)和Mou(OS X)编辑器，部分编辑器中文效果欠佳，可通过自定义CSS字体解决。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;基本&#34;&gt;基本&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Markdown是一种用来写作的轻量级标记语言。&lt;/li&gt;
&lt;li&gt;用标记语法，来代替常见的排版格式。&lt;/li&gt;
&lt;li&gt;兼容 HTML代码。&lt;/li&gt;
&lt;li&gt;特殊字符自动转换，例如&lt;code&gt;&amp;lt;&lt;/code&gt;和&lt;code&gt;&amp;amp;&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;字体&#34;&gt;字体&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;使用星号&lt;code&gt;*&lt;/code&gt;和底号&lt;code&gt;_&lt;/code&gt;表示&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;标签。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  *斜体*
  _斜体_
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p&gt;&lt;em&gt;斜体&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;使用双星号&lt;code&gt;**&lt;/code&gt;和双底号&lt;code&gt;__&lt;/code&gt;表示&lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;标签。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  **强调**
  __强调__
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;强调&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;换行&#34;&gt;换行&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;单一段落用空白行。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;标题&#34;&gt;标题&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;生成&lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;-&lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt;标签，是通过在文字前面加上同等个数&lt;code&gt;#&lt;/code&gt;符号来实现。&lt;/li&gt;
&lt;li&gt;出于美观，也可以使用对称的闭合式标题符号。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  ### 这是标题
  ### 这是标题 ###
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p&gt;### 这是标题&lt;/p&gt;

&lt;h2 id=&#34;列表&#34;&gt;列表&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt;，&lt;code&gt;-&lt;/code&gt;，&lt;code&gt;+&lt;/code&gt;这三个符号效果都一样，这3个符号被称为Markdown列表符号。而有序列表则使用数字接着一个英文句点（数字大小并不会影响输出序列）。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  * 第一行
  * 第二行
  * 第三行
  6. 第四行
  5. 第五行
  4. 第六行
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;第一行&lt;/li&gt;
&lt;li&gt;第二行&lt;/li&gt;
&lt;li&gt;第三行&lt;/li&gt;
&lt;li&gt;第一行&lt;/li&gt;
&lt;li&gt;第二行&lt;/li&gt;
&lt;li&gt;第三行&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;引用&#34;&gt;引用&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;符号表示引用，可简写于第一行，也可以每一行都添加。&lt;/li&gt;
&lt;li&gt;区块的引用可以嵌套，只需要在层次数上加上同等数量的&lt;code&gt;&amp;gt;&lt;/code&gt;符号。&lt;/li&gt;
&lt;li&gt;引用内可以使用其他Markdown语法，包括标题、列表、代码区块等。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  &amp;gt;    引用
  &amp;gt;    &amp;gt;    引用中的引用
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;引用
   &amp;gt;    引用中的引用&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;代码区块&#34;&gt;代码区块&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;`&lt;/code&gt;是表示inline代码，4个&lt;code&gt; &lt;/code&gt;（空格）来表示缩进式代码段，分别对应HTML的&lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt;，&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;标签。也可以使用&lt;code&gt;```&lt;/code&gt;来表达围栏式代码块（&lt;strong&gt;GFM语法&lt;/strong&gt;，部分编辑器不支持），并指定他的语言类型，实现语法高亮。围栏式代码块可以大量减少缩进的使用，大规模的代码块使用非常方便。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  `sort()` 函数按升序对给定数组的值排序。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;普通的缩进式代码块。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;      &amp;lt;?php
          $my_array = array(&#39;a&#39; =&amp;gt; &#39;Dog&#39;, &#39;b&#39; =&amp;gt; &#39;Cat&#39;);
          sort($my_array);
          print_r($my_array);
      ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;带语法高亮的围栏式代码块（&lt;strong&gt;GFM语法&lt;/strong&gt;，部分编辑器不支持）。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  ```php
  &amp;lt;?php
      $my_array = array(&#39;a&#39; =&amp;gt; &#39;Dog&#39;, &#39;b&#39; =&amp;gt; &#39;Cat&#39;);
      sort($my_array);
      print_r($my_array);
  ?&amp;gt;
  ```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sort()&lt;/code&gt; 函数按升序对给定数组的值排序。&lt;/p&gt;

&lt;p&gt;普通的缩进式代码块。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  &amp;lt;?php
      $my_array = array(&#39;a&#39; =&amp;gt; &#39;Dog&#39;, &#39;b&#39; =&amp;gt; &#39;Cat&#39;);
      sort($my_array);
      print_r($my_array);
  ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;带语法高亮的围栏式代码块（&lt;strong&gt;GFM语法&lt;/strong&gt;，部分编辑器不支持）。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;  &amp;lt;?php
      $my_array = array(&#39;a&#39; =&amp;gt; &#39;Dog&#39;, &#39;b&#39; =&amp;gt; &#39;Cat&#39;);
      sort($my_array);
      print_r($my_array);
  ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;链接&#34;&gt;链接&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Markdown支持两种形式的链接语法：行内式和参考式两种形式。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;行内式链接，是在方括号后面接圆括号即可。
  例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  [Melo618](http://melo618.com &amp;quot;Melo618的博客&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://melo618.com&#34; title=&#34;Melo618的博客&#34;&gt;Melo618&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;参考式链接，是在链接文字的括号后面加上另一个方括号，在第二个方括号里面要填入用以辨识链接的标记。
  例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  [Melo618][blog]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://melo618.com&#34; title=&#34;Melo618的博客&#34;&gt;Melo618&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;图片&#34;&gt;图片&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Markdown使用一种和链接很相似的语法来标记图片，只是多了一个&lt;code&gt;!&lt;/code&gt;在最前面，同样也允许两种样式：行内式和参考式。&lt;/li&gt;
&lt;li&gt;目前为止，Markdown还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;标签。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;行内式链接，是在方括号后面接圆括号即可。
  例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  ![微信](http://7sbovo.com1.z0.glb.clouddn.com/simple-markdown-guide-weixin.png &amp;quot;微信&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://7sbovo.com1.z0.glb.clouddn.com/simple-markdown-guide-weixin.png&#34; alt=&#34;微信&#34; title=&#34;微信&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;参考式链接，是在链接文字的括号后面加上另一个方括号，在第二个方括号里面要填入用以辨识链接的标记。
  例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  ![微信][QR]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://7sbovo.com1.z0.glb.clouddn.com/simple-markdown-guide-weixin.png&#34; alt=&#34;微信&#34; title=&#34;微信&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;分隔线&#34;&gt;分隔线&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;使用三个以上的&lt;code&gt;*&lt;/code&gt;、&lt;code&gt;-&lt;/code&gt;来建立一个分隔线，行内不能有其他字符。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  * * *
  ***
  - - -
  ---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p&gt;上文&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;下文&lt;/p&gt;

&lt;h2 id=&#34;表格&#34;&gt;表格&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Markdown使用&lt;code&gt;|&lt;/code&gt;和&lt;code&gt;-&lt;/code&gt;来绘制表格，&lt;code&gt;:&lt;/code&gt;可控制左对齐、右对齐及居中。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  | Title   | Description                        |
  | :------ | :--------------------------------: |
  | Version | 0.0.1                              |
  | Editor  | [Melo618](mailto:Editor@Email.com) |
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p&gt;| Title   | Description                        |
  | :&amp;mdash;&amp;mdash; | :&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;: |
  | Version | 0.0.1                              |
  | Editor  | &lt;a href=&#34;mailto:Editor@Email.com&#34;&gt;Melo618&lt;/a&gt; |&lt;/p&gt;

&lt;h2 id=&#34;特殊符号&#34;&gt;特殊符号&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Markdown利用&lt;code&gt;\&lt;/code&gt;字符来转义一些在语法中有特殊意义的符号。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;推荐阅读&#34;&gt;推荐阅读&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wowubuntu.com/markdown/index.html&#34;&gt;Markdown语法说明（简体中文版）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://daringfireball.net/projects/markdown/syntax&#34;&gt;Markdown Syntax Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.github.com/articles/github-flavored-markdown&#34;&gt;GitHub Flavored Markdown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;Copyright © 2014-2015, Melo Chan. &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>git常用命令集合</title>
      <link>http://wixb50.gitcafe.io/2015/11/05/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%9B%86%E5%90%88/</link>
      <pubDate>Thu, 05 Nov 2015 13:25:17 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.gitcafe.io/2015/11/05/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%9B%86%E5%90%88/</guid>
      <description>

&lt;pre&gt;&lt;code&gt;git init                                                  # 初始化本地git仓库（创建新仓库）
git config --global user.name &amp;quot;xxx&amp;quot;                       # 配置用户名
git config --global user.email &amp;quot;xxx@xxx.com&amp;quot;              # 配置邮件
git config --global color.ui true                         # git status等命令自动着色
git config --global color.status auto
git config --global color.diff auto
git config --global color.branch auto
git config --global color.interactive auto
git config --global --unset http.proxy                    # remove  proxy configuration on git
git clone git+ssh://git@192.168.53.168/VT.git             # clone远程仓库
git status                                                # 查看当前版本状态（是否修改）
git add xyz                                               # 添加xyz文件至index
git add .                                                 # 增加当前子目录下所有更改过的文件至index
git commit -m &#39;xxx&#39;                                       # 提交
git commit --amend -m &#39;xxx&#39;                               # 合并上一次提交（用于反复修改）
git commit -am &#39;xxx&#39;                                      # 将add和commit合为一步
git rm xxx                                                # 删除index中的文件
git rm -r *                                               # 递归删除
git log                                                   # 显示提交日志
git log -1                                                # 显示1行日志 -n为n行
git log -5
git log --stat                                            # 显示提交日志及相关变动文件
git log -p -m
git show dfb02e6e4f2f7b573337763e5c0013802e392818         # 显示某个提交的详细内容
git show dfb02                                            # 可只用commitid的前几位
git show HEAD                                             # 显示HEAD提交日志
git show HEAD^                                            # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本
git tag                                                   # 显示已存在的tag
git tag -a v2.0 -m &#39;xxx&#39;                                  # 增加v2.0的tag
git show v2.0                                             # 显示v2.0的日志及详细内容
git log v2.0                                              # 显示v2.0的日志
git diff                                                  # 显示所有未添加至index的变更
git diff --cached                                         # 显示所有已添加index但还未commit的变更
git diff HEAD^                                            # 比较与上一个版本的差异
git diff HEAD -- ./lib                                    # 比较与HEAD版本lib目录的差异
git diff origin/master..master                            # 比较远程分支master上有本地分支master上没有的
git diff origin/master..master --stat                     # 只显示差异的文件，不显示具体内容
git remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch）
git branch                                                # 显示本地分支
git branch --contains 50089                               # 显示包含提交50089的分支
git branch -a                                             # 显示所有分支
git branch -r                                             # 显示所有原创分支
git branch --merged                                       # 显示所有已合并到当前分支的分支
git branch --no-merged                                    # 显示所有未合并到当前分支的分支
git branch -m master master_copy                          # 本地分支改名
git checkout -b master_copy                               # 从当前分支创建新分支master_copy并检出
git checkout -b master master_copy                        # 上面的完整版
git checkout features/performance                         # 检出已存在的features/performance分支
git checkout --track hotfixes/BJVEP933                    # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支
git checkout v2.0                                         # 检出版本v2.0
git checkout -b devel origin/develop                      # 从远程分支develop创建新本地分支devel并检出
git checkout -- README                                    # 检出head版本的README文件（可用于修改错误回退）
git merge origin/master                                   # 合并远程master分支至当前分支
git cherry-pick ff44785404a8e                             # 合并提交ff44785404a8e的修改
git push origin master                                    # 将当前分支push到远程master分支
git push origin :hotfixes/BJVEP933                        # 删除远程仓库的hotfixes/BJVEP933分支
git push --tags                                           # 把所有tag推送到远程仓库
git fetch                                                 # 获取所有远程分支（不更新本地分支，另需merge）
git fetch --prune                                         # 获取所有原创分支并清除服务器上已删掉的分支
git pull origin master                                    # 获取远程分支master并merge到当前分支
git mv README README2                                     # 重命名文件README为README2
git reset --hard HEAD                                     # 将当前版本重置为HEAD（通常用于merge失败回退）
git rebase
git branch -d hotfixes/BJVEP933                           # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）
git branch -D hotfixes/BJVEP933                           # 强制删除分支hotfixes/BJVEP933
git ls-files                                              # 列出git index包含的文件
git show-branch                                           # 图示当前分支历史
git show-branch --all                                     # 图示所有分支历史
git whatchanged                                           # 显示提交历史对应的文件修改
git revert dfb02e6e4f2f7b573337763e5c0013802e392818       # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818
git ls-tree HEAD                                          # 内部命令：显示某个git对象
git rev-parse v2.0                                        # 内部命令：显示某个ref对于的SHA1 HASH
git reflog                                                # 显示所有提交，包括孤立节点
git show HEAD@{5}
git show master@{yesterday}                               # 显示master分支昨天的状态
git log --pretty=format:&#39;%h %s&#39; --graph                   # 图示提交日志
git show HEAD~3
git show -s --pretty=raw 2be7fcb476
git stash                                                 # 暂存当前修改，将所有至为HEAD状态
git stash list                                            # 查看所有暂存
git stash show -p stash@{0}                               # 参考第一次暂存
git stash apply stash@{0}                                 # 应用第一次暂存
git grep &amp;quot;delete from&amp;quot;                                    # 文件中搜索文本“delete from”
git grep -e &#39;#define&#39; --and -e SORT_DIRENT
git gc
git fsck
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;其他&#34;&gt;其他&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;gitignore&lt;/strong&gt;&lt;br /&gt;
忽略不想提交的文件&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;gitflow&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git flow init  #初始化一个分支结构，默认选择

git flow hotfix start 3  #创建一个基于develop的分支hotfix/3，并切换到当前分支，补丁修复
git flow hotfix finish 3  #修复完成，合并分支到develop，并删除hotfix/3分支

git flow feature start demo  #创建一个功能分支，增加新功能
git flow feature finish demo  #合并完成一个功能分支

git flow release start v0.7.0  #它会创建一个release/v0.7.0分支，主要用于测试
git flow release finish v0.7.0  #合并完成一个测试分支
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;学习资料&#34;&gt;学习资料&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://git-scm.com/book/zh/v2/&#34;&gt;GitPro2&lt;/a&gt;
堪称权威,而且还有中文版&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://rogerdudler.github.io/git-guide/index.zh.html&#34;&gt;git-简明指南&lt;/a&gt;
简单易懂，适合入门&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>