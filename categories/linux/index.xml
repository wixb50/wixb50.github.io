<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Wixb blog</title>
    <link>http://wixb50.github.io/categories/linux/</link>
    <description>Recent content in Linux on Wixb blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wixb50@gmail.com (Wixb)</managingEditor>
    <webMaster>wixb50@gmail.com (Wixb)</webMaster>
    <copyright>(c) 2015 wixb.All rights reserved.</copyright>
    <lastBuildDate>Thu, 28 Apr 2016 18:15:30 +0800</lastBuildDate>
    <atom:link href="http://wixb50.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ssh_config来管理ssh会话</title>
      <link>http://wixb50.github.io/2016/04/28/ssh_config%E6%9D%A5%E7%AE%A1%E7%90%86ssh%E4%BC%9A%E8%AF%9D/</link>
      <pubDate>Thu, 28 Apr 2016 18:15:30 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2016/04/28/ssh_config%E6%9D%A5%E7%AE%A1%E7%90%86ssh%E4%BC%9A%E8%AF%9D/</guid>
      <description>

&lt;h2 id=&#34;简介:0984e7ebd3dce43c74ff94df48f1ae75&#34;&gt;简介&lt;/h2&gt;

&lt;p&gt;通常利用 ssh 连接远程服务器，一般都要输入以下类型命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh user@hostname -p port
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但是如果有多个服务器的话，每次都需要重新输入，还需要专门记忆，个人比较懒，不想记这么多，也不想为了登录一个server，打重复代码太多。&lt;/p&gt;

&lt;p&gt;一般，有一种解决方案是，采用第三方的manager工具，比如：putty、PAC manager，但是对于喜欢在终端玩耍的孩纸就不喜欢这个了。&lt;/p&gt;

&lt;h2 id=&#34;ssh-config方案:0984e7ebd3dce43c74ff94df48f1ae75&#34;&gt;ssh_config方案&lt;/h2&gt;

&lt;p&gt;还好，ssh提供一种优雅灵活的方案，就是利用ssh的用户配置文件config管理ssh会话。ssh的用户配置文件放在用户&lt;code&gt;~/.ssh/config&lt;/code&gt;目录中，不存在则新建一个。配置语法如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Host 别名
    HostName  主机名
    User      用户名
    Port      端口，默认22
    IdentityFile 密钥文件的路径，默认当前目录的
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;有了这些配置，就可以这样用ssh 登录服务器了：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh 别名
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ps:0984e7ebd3dce43c74ff94df48f1ae75&#34;&gt;Ps&lt;/h2&gt;

&lt;p&gt;如果需要实现无密码登录主机的，请在自行google配置。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>linux 路由表设置 之 route 指令</title>
      <link>http://wixb50.github.io/2016/02/26/linux-%E8%B7%AF%E7%94%B1%E8%A1%A8%E8%AE%BE%E7%BD%AE-%E4%B9%8B-route-%E6%8C%87%E4%BB%A4/</link>
      <pubDate>Fri, 26 Feb 2016 22:15:30 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2016/02/26/linux-%E8%B7%AF%E7%94%B1%E8%A1%A8%E8%AE%BE%E7%BD%AE-%E4%B9%8B-route-%E6%8C%87%E4%BB%A4/</guid>
      <description>

&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;

&lt;p&gt;路由表（routing table）是一个存储在路由器或者联网计算机中的电子表格或类数据库。路由表存储着指向特定网络地址的路径（在有些情况下，还记录有路径的路由度量值）。路由表中含有网络周边的拓扑信息。路由表建立的主要目标是为了实现路由协议和静态路由选择。&lt;/p&gt;

&lt;p&gt;在Linux系统中，设置路由通常是为了解决以下问题：该Linux系统在一个局域网中，局域网中有一个网关，能够让机器访问Internet，那么就需要将这台机器的IP地址设置为Linux机器的默认路由。要注意的是，直接在命令行下执行route命令来添加路由，不会永久保存，当网卡重启或者机器重启之后，该路由就失效了;可以在/etc/rc.local中添加route命令来保证该路由设置永久有效。&lt;/p&gt;

&lt;h2 id=&#34;使用实例&#34;&gt;使用实例&lt;/h2&gt;

&lt;p&gt;route 或者 route -n&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# route 
Destination     Gateway         Genmask Flags Metric Ref    Use Iface  
192.168.0.0     *               255.255.255.0   U     0      0        0 eth0  
169.254.0.0     *               255.255.0.0     U     0      0        0 eth0  
default         192.168.0.1     0.0.0.0         UG    0      0        0 eth0 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;route 命令的输出项说明：&lt;/p&gt;

&lt;p&gt;Gateway 网关地址，”*” 表示目标是本主机所属的网络，不需要路由&lt;br /&gt;
Genmask 网络掩码&lt;br /&gt;
Flags   标记。一些可能的标记如下：&lt;br /&gt;
　U Up表示此路由当前为启动状态&lt;br /&gt;
　H Host，表示此网关为一主机&lt;br /&gt;
　G Gateway，表示此网关为一路由器&lt;br /&gt;
　R Reinstate Route，使用动态路由重新初始化的路由&lt;br /&gt;
　D Dynamically,此路由是动态性地写入&lt;br /&gt;
　M Modified，此路由是由路由守护程序或导向器动态修改&lt;br /&gt;
　! 表示此路由当前为关闭状态&lt;br /&gt;
Metric  路由距离，到达指定网络所需的中转数（linux 内核中没有使用）&lt;br /&gt;
Ref 路由项引用次数（linux 内核中没有使用）&lt;br /&gt;
Use 此路由项被路由软件查找的次数&lt;br /&gt;
Iface   该路由表项对应的输出接口&lt;br /&gt;
备注：&lt;br /&gt;
route -n (-n 表示不解析名字,列出速度会比route 快)&lt;/p&gt;

&lt;h2 id=&#34;3-种路由类型&#34;&gt;3 种路由类型&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;主机路由&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;主机路由是路由选择表中指向单个IP地址或主机名的路由记录。主机路由的Flags字段为H。例如，在下面的示例中，本地主机通过IP地址192.168.1.1的路由器到达IP地址为10.0.0.10的主机。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Destination    Gateway       Genmask Flags     Metric    Ref    Use    Iface
-----------    -------     -------            -----     ------    ---    ---    -----
10.0.0.10     192.168.1.1    255.255.255.255   UH       0    0      0    eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;网络路由&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;网络路由是代表主机可以到达的网络。网络路由的Flags字段为N。例如，在下面的示例中，本地主机将发送到网络192.19.12.0的数据包转发到IP地址为192.168.1.1的路由器。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Destination    Gateway       Genmask Flags    Metric    Ref     Use    Iface
-----------    -------     -------         -----    -----   ---    ---    -----
192.19.12.0     192.168.1.1    255.255.255.0      UN      0       0     0    eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;默认路由&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当主机不能在路由表中查找到目标主机的IP地址或网络路由时，数据包就被发送到默认路由（默认网关）上。默认路由的Flags字段为G。例如，在下面的示例中，默认路由是IP地址为192.168.1.1的路由器&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Destination    Gateway       Genmask Flags     Metric    Ref    Use    Iface
-----------    -------     ------- -----      ------    ---    ---    -----
default       192.168.1.1     0.0.0.0    UG       0        0     0    eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;配置静态路由&#34;&gt;配置静态路由&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;route 命令&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;设置和查看路由表都可以用 route 命令，设置内核路由表的命令格式是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# route [-f] [-p] [Command [Destination] [mask Netmask] [Gateway] [metric Metric]] [if Interface]] 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Route命令是用于操作基于内核ip路由表，它的主要作用是创建一个静态路由让指定一个主机或者一个网络通过一个网络接口，如eth0。当使用&amp;raquo;add&amp;raquo;或者&amp;raquo;del&amp;raquo;参数时，路由表被修改，如果没有参数，则显示路由表当前的内容。&lt;/p&gt;

&lt;p&gt;其中：&lt;br /&gt;
　-c 显示更多信息&lt;br /&gt;
　-n 不解析名字&lt;br /&gt;
　-v 显示详细的处理信息&lt;br /&gt;
　-F 显示发送信息&lt;br /&gt;
　-C 显示路由缓存&lt;br /&gt;
　-f 清除所有网关入口的路由表。&lt;/p&gt;

&lt;h2 id=&#34;p-与-add-命令一起使用时使路由具有永久性&#34;&gt;　-p 与 add 命令一起使用时使路由具有永久性。&lt;/h2&gt;

&lt;p&gt;　add:添加一条新路由。&lt;br /&gt;
　del:删除一条路由。&lt;br /&gt;
　-net:目标地址是一个网络。&lt;br /&gt;
　-host:目标地址是一个主机。&lt;br /&gt;
　netmask:当添加一个网络路由时，需要使用网络掩码。&lt;br /&gt;
　gw:路由数据包通过网关。注意，你指定的网关必须能够达到。&lt;br /&gt;
　metric：设置路由跳数。&lt;br /&gt;
　Command 指定您想运行的命令 (Add/Change/Delete/Print)。&lt;br /&gt;
　Destination 指定该路由的网络目标。&lt;br /&gt;
　mask Netmask 指定与网络目标相关的网络掩码（也被称作子网掩码）。&lt;br /&gt;
　Gateway 指定网络目标定义的地址集和子网掩码可以到达的前进或下一跃点 IP 地址。&lt;br /&gt;
　metric Metric 为路由指定一个整数成本值标（从 1 至 9999），当在路由表(与转发的数据包目标地址最匹配)的多个路由中进行选择时可以使用。&lt;br /&gt;
　if Interface 为可以访问目标的接口指定接口索引。若要获得一个接口列表和它们相应的接口索引，使用 route print 命令的显示功能。可以使用十进制或十六进制值进行接口索引。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;route 命令使用举例&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;添加到主机的路由&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# route add -host 192.168.1.2 dev eth0 
# route add -host 10.20.30.148 gw 10.20.30.40     #添加到10.20.30.148的网管
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加到网络的路由&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# route add -net 10.20.30.0 netmask 255.255.255.0 eth0   #添加10.20.30.40的网络
# route add -net 10.20.30.0 netmask 255.255.255.0 gw 10.20.30.41 #添加10.20.30.48的网络
# route add -net 192.168.1.0/24 eth1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加默认路由&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# route add default gw 192.168.1.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;删除路由&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# route del -host 192.168.1.2 dev eth0:0
# route del -host 10.20.30.148 gw 10.20.30.40
# route del -net 10.20.30.40 netmask 255.255.255.248 eth0
# route del -net 10.20.30.48 netmask 255.255.255.248 gw 10.20.30.41
# route del -net 192.168.1.0/24 eth1
# route del default gw 192.168.1.1
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;end&#34;&gt;End&lt;/h2&gt;

&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.2cto.com/net/201503/386381.html&#34;&gt;Linux route命令详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/vevenlcf/article/details/48026965&#34;&gt;route 指令详解&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>aria2 rpc</title>
      <link>http://wixb50.github.io/2015/12/23/aria2-rpc/</link>
      <pubDate>Wed, 23 Dec 2015 16:21:30 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/12/23/aria2-rpc/</guid>
      <description>

&lt;p&gt;##目录
&lt;!-- MarkdownTOC --&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[](#前言null-link)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#初步部署-aria2-简易版&#34;&gt;初步部署 Aria2 简易版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#进阶-aria2&#34;&gt;进阶 Aria2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#end&#34;&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#参考&#34;&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- /MarkdownTOC --&gt;

&lt;h2 id=&#34;前言-null-link&#34;&gt;&lt;a href=&#34;chrome://not-a-link&#34;&gt;前言&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://aria2.sourceforge.net/&#34;&gt;Aria2&lt;/a&gt; 是一个轻量级多协议和多源命令行下载实用工具。它支持 HTTP / HTTPS, FTP, SFTP, bt 和 Metalink。通过内置 Aria2 可以操作 json - rpc 和 xml - rpc。对，Aria2 没有 GUI 图形界面，只有粗糙的命令行界面！但这也正是 Aria2 之轻快好省所在。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;官方下载链接：&lt;a href=&#34;http://sourceforge.net/projects/aria2/files/stable/&#34;&gt;http://sourceforge.net/projects/aria2/files/stable/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;初步部署-aria2-简易版&#34;&gt;初步部署 Aria2 简易版&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. 安装aria&lt;/strong&gt;
终端输入安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install aria2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;2.创建一个目录存放aria2配置终端输入&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir /etc/aria2    #新建文件夹
sudo touch /etc/aria2/aria2.session    #新建session文件
sudo chmod 777 /etc/aria2/aria2.session    #设置aria2.session可写
sudo vim /etc/aria2/aria2.conf    #创建配置文件
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在aria2.conf添加已经代码 &lt;strong&gt;根据实际情况修改：&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#＝＝＝＝＝＝＝＝＝文件保存目录自行修改
dir=/home/nishishui/aria2_download
disable-ipv6=true
# 打开rpc的目的是为了给web管理端用
rpc-secret=123456 # 连接时候设置：http://token:xxxxxx@host:port/jsonrpc
enable-rpc=true
rpc-allow-origin-all=true
rpc-listen-all=true
#rpc-listen-port=6800
continue=true
input-file=/etc/aria2/aria2.session
save-session=/etc/aria2/aria2.session
# 最大同时下载任务数
max-concurrent-downloads=5
# 同一服务器连接数, 添加时可指定, 默认:1
max-connection-per-server=5
# 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载
min-split-size=10M
# 单个任务最大线程数, 添加时可指定, 默认:5
split=5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;3.启动aria2&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo aria2c --conf-path=/etc/aria2/aria2.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果没有提示错误，按ctrl+c停止运行命令，转为后台运行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo aria2 --conf-path=/etc/aria2/aria2.conf -D
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;4. 创建启动脚本&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim ~/aria2/aria2_start.sh 
sudo aria2c --conf-path=/etc/aria2/aria2.conf -D  

vim ~/aria2/aria2_stop.sh 
#!/bin/bash
process_name=aria2c
kill_process(){
        process_id=`ps -eo pid,command|grep $process_name |grep -v &amp;quot;grep&amp;quot; |awk &#39;{print $1}&#39;`
        sudo kill $process_id
}
kill_process
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;5. Web 前端控制&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;如此这般，Aria2 就配置好了，那么问题就来了，这么一个看不见摸不着的软件怎么使用？别急，即使没有 GUI，Aria2 也还是有 Web 端控制界面的，目前比较知名的有 &lt;a href=&#34;https://github.com/ziahamza/webui-aria2&#34;&gt;Aria2 Web UI&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/binux/yaaw&#34;&gt;YAAW&lt;/a&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Aria2 Web UI（推荐！）: &lt;a href=&#34;http://ziahamza.github.io/webui-aria2/&#34;&gt;英文原版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;YAAW: &lt;a href=&#34;http://binux.github.io/yaaw/demo/&#34;&gt;英文原版&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Tips：其他控制界面/扩展/脚本可能会需要填写 JSON-RPC Path，默认为: &lt;a href=&#34;http://localhost:6800/jsonrpc&#34;&gt;http://localhost:6800/jsonrpc&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;简易版的 Aria2 至此就部署完毕，你可以在 Web 控制前段方便地添加下载链接/bt种子了。&lt;/p&gt;

&lt;h2 id=&#34;进阶-aria2&#34;&gt;进阶 Aria2&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. 配置文件 aria2.conf 详解&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;更多参数请参考官方说明文档：&lt;a href=&#34;http://aria2.sourceforge.net/manual/en/html/aria2c.html&#34;&gt;http://aria2.sourceforge.net/manual/en/html/aria2c.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;网友翻译的部分内容：  &lt;a href=&#34;http://sydi.org/posts/linux/aria2c-usage-sample-cns.html#fn.1&#34;&gt;http://sydi.org/posts/linux/aria2c-usage-sample-cns.html#fn.1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. 结合Docker使用&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;可查看ziahamza大神配置好的：&lt;a href=&#34;https://github.com/ziahamza/webui-aria2&#34;&gt;Aria2 Web UI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. 搭配脚本/扩展&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;迅雷离线（需会员账号）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chrome Extension: &lt;a href=&#34;https://chrome.google.com/webstore/detail/thunderlixianassistant/eehlmkfpnagoieibahhcghphdbjcdmen&#34;&gt;ThunderLixianAssistant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;UserScript: &lt;a href=&#34;https://github.com/binux/ThunderLixianExporter&#34;&gt;ThunderLixianExporter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;旋风离线&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;UserScript: &lt;a href=&#34;https://greasyfork.org/zh-CN/scripts/354-xuanfengex&#34;&gt;XuanFengEx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;UserScript: &lt;a href=&#34;https://greasyfork.org/zh-CN/scripts/2398-lixianexporter&#34;&gt;LixianExporter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;百度网盘&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chrome Extension: &lt;a href=&#34;https://chrome.google.com/webstore/detail/baiduexporter/mjaenbjdjmgolhoafkohbhhbaiedbkno&#34;&gt;BaiduExporter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Firefox Addons: &lt;a href=&#34;https://github.com/acgotaku/BaiduExporter&#34;&gt;BaiduExporter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;UserScript: &lt;a href=&#34;https://greasyfork.org/scripts/294-baidupandownloadhelper&#34;&gt;BaiduPanDownloadHelper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其他脚本&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chrome Extension: &lt;a href=&#34;https://chrome.google.com/webstore/detail/%E6%B7%BB%E5%8A%A0%E5%88%B0aria2/nimeojfecmndgolmlmjghjmbpdkhhogl&#34;&gt;添加到 aria2&lt;/a&gt; &lt;a href=&#34;http://git.oschina.net/yky/CDHelper&#34;&gt;Chrome Download Helper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;end&#34;&gt;End&lt;/h2&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/aa65535/5e956c4eb4f451ddec29&#34;&gt;https://gist.github.com/aa65535/5e956c4eb4f451ddec29&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.aliencn.net/2015/08/02/Use_aria2_in_RaspberryPi/&#34;&gt;在树莓派中使用aria2下载工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.nixonli.com/linux/ubuntu/17040.html&#34;&gt;ubuntu 配置 aria2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>aria2命令</title>
      <link>http://wixb50.github.io/2015/12/23/aria2%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 23 Dec 2015 14:21:30 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/12/23/aria2%E5%91%BD%E4%BB%A4/</guid>
      <description>

&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;

&lt;!-- MarkdownTOC --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ria2&#34;&gt;ria2&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#基本使用&#34;&gt;基本使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#基本用法&#34;&gt;基本用法&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#下载一个文件&#34;&gt;下载一个文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用两个连接从一个源下载文件&#34;&gt;使用两个连接从一个源下载文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用两个连接下载文件：&#34;&gt;使用两个连接下载文件：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#从http或ftp服务器下载：&#34;&gt;从http或ftp服务器下载：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#从任意源进行并行下载：&#34;&gt;从任意源进行并行下载：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如果仅仅指定本地磁盘上的torrent文件或者metalink，是不需要-z选项的，如：&#34;&gt;如果仅仅指定本地磁盘上的torrent文件或者metalink，是不需要-Z选项的，如：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#从文件中读取目的文件，并行下载&#34;&gt;从文件中读取目的文件，并行下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#退出时保存出错未完成的下载-使用session&#34;&gt;退出时保存出错/未完成的下载, 使用&lt;code&gt;session&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#后续可以使用该文件继续未完成的下载：&#34;&gt;后续可以使用该文件继续未完成的下载：&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#metalink相关下载示例&#34;&gt;Metalink相关下载示例&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#从远程metalink下载文件：&#34;&gt;从远程metalink下载文件：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#从远程metalink下载文件但在内存中处理metalink：&#34;&gt;从远程metalink下载文件,但在内存中处理metalink：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#通过本地metalink下载：&#34;&gt;通过本地metalink下载：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用5个server下载&#34;&gt;使用5个server下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#通过多个本地metalink文件进行下载：&#34;&gt;通过多个本地metalink文件进行下载：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#打印metalink的内容&#34;&gt;打印metalink的内容&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#通过序号下载指定文件&#34;&gt;通过序号下载指定文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#指定用户偏好从本地metalink下载文件&#34;&gt;指定用户偏好从本地metalink下载文件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#bittorrent相关下载&#34;&gt;BitTorrent相关下载&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#通过远程bittorrent文件下载&#34;&gt;通过远程BitTorrent文件下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#通过远程bittorrent文件下载但在内存中处理&#34;&gt;通过远程BitTorrent文件下载,但在内存中处理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#通过本地torrent文件下载&#34;&gt;通过本地torrent文件下载:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#可以同时处理多个torrent文件&#34;&gt;可以同时处理多个torrent文件:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#通过bittorrent-magnet-uri下载：&#34;&gt;通过BitTorrent Magnet URI下载：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#自动调整peer节点数量&#34;&gt;自动调整peer节点数量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#开启dht&#34;&gt;开启DHT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#开启ipv6的dht&#34;&gt;开启ipv6的DHT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#增加和删除tracker-uri：&#34;&gt;增加和删除tracker URI：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#加密&#34;&gt;加密&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#打印torrent文件内容&#34;&gt;打印torrent文件内容&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#通过序号选择指定文件下载：&#34;&gt;通过序号选择指定文件下载：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#修改监听端口&#34;&gt;修改监听端口&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#指定aria2完成下载后的停止条件&#34;&gt;指定aria2完成下载后的停止条件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#设置上传速度&#34;&gt;设置上传速度&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#seeding已经下载完成的文件&#34;&gt;Seeding已经下载完成的文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#还可以同时播种多个torrent文件&#34;&gt;还可以同时播种多个torrent文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#通过index指定文件名&#34;&gt;通过index指定文件名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#为进行文件预览进行分片优先下载&#34;&gt;为进行文件预览进行分片优先下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#用代理服务器&#34;&gt;用代理服务器&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#为所有协议httpsftp设定代理服务器&#34;&gt;为所有协议(HTTP(S)/FTP)设定代理服务器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#设置http代理&#34;&gt;设置http代理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用需要认证的代理&#34;&gt;使用需要认证的代理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#高级的http特性：&#34;&gt;高级的http特性：&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#导入cookie&#34;&gt;导入cookie&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#其他高级特性&#34;&gt;其他高级特性&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#下载速度限制&#34;&gt;下载速度限制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用-v修复受损的下载&#34;&gt;使用-V修复受损的下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#当下载速度下于某个特定值时放弃下载&#34;&gt;当下载速度下于某个特定值时放弃下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#uri的参数化支持&#34;&gt;URI的参数化支持&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#时间戳&#34;&gt;时间戳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#输入文件&#34;&gt;输入文件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- /MarkdownTOC --&gt;

&lt;p&gt;#aria2
&lt;strong&gt;title:&lt;/strong&gt; aria2 使用说明&lt;br /&gt;
&lt;strong&gt;title:&lt;/strong&gt; aria2,aria2c,wget,linux,下载&lt;br /&gt;
&lt;strong&gt;info:&lt;/strong&gt; &lt;strong&gt;aria2&lt;/strong&gt;是一款轻量型命令行下载工具，它提供了对多协议和多源地址的支持，目前支持的协议包括&lt;strong&gt;HTTP(S), FTP, BitTorrent (DHT, PEX, MSE/PE), and Metalink&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;aria2可以从多个源地址，并使用多种协议进行下载，并尝试将下载带宽利用率最大化。它可以同时从HTTP(S)/FTP 和 BitTorrent下载一份数据，并且将其上传到bt集群中。通过Metalink的分块检查，aria2可以在下载过程中自动的进行数据校验。&lt;/p&gt;

&lt;p&gt;虽然现在有诸如&lt;strong&gt;wget&lt;/strong&gt;和&lt;strong&gt;curl&lt;/strong&gt;等其他类似产品，但aria2具有两个独特的功能：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;aria2可以从多个源下载文件(HTTP(S)/FTP/BitTorrent)，&lt;/li&gt;
&lt;li&gt;aria2可以并发的进行多个源地址的下载。这样用户将不必等待单个文件的下载完成，而且aria2会尽可能快的下载。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;除aria2外，也有一些其他可以进行分片下载的工具，它们往往按照线程数分割文件，并行下载，换言之，它们不会对未完成的部分进行自适应性重新分片，当整个流程工作正常时，这个策略是可以的，但一旦存在一个线程运行非常慢，这样整个进程就需要等待该线程的执行。而aria2可以很好的处理这个情况，它可以将文件分割成1M大小的分片，当某个线程运行特别缓慢时，aria2可以使用更快的线程来替换。总之，根据作者的说法，aria2是非常智能和可靠的。&lt;/p&gt;

&lt;p&gt;和最初的aria工具具有一个GTK+界面不同，aria2只提供了命令行接口，从而使得对资源的要求更小。通常它的物理内存消耗为4M(HTTP/FTP)到9M(BitTorrent),当进行bt下载且速度为2.8M/s时的cpu消耗约为6%。&lt;/p&gt;

&lt;h2 id=&#34;基本使用&#34;&gt;基本使用&lt;/h2&gt;

&lt;p&gt;当源地址存在诸如&lt;code&gt;&amp;amp;&lt;/code&gt;或&lt;code&gt;*&lt;/code&gt;等其他shell特殊字符时，请使用单引号或者双引号将uri包含起来。&lt;/p&gt;

&lt;p&gt;在aria2的1.10.0版中，aria2对每台主机默认使用1个连接和20MB的分块大小，所以不论在-s参数中指定任何值，他都对一台主机只会建立一个连接，需要注意的一点是这个限制是针对单个主机的，当指定了多台主机时，它会对每台主机建立一个连接。如果要使用1.9.x版中的行为，则要使用-x16 -k1M。另见man页面的 &lt;code&gt;–max-connection-per-server&lt;/code&gt; 和 &lt;code&gt;–min-split-size&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;_aria2默认会在开始下载前预先分配文件空间以避免可能的文件碎片_，但这会在部分PC上带来50%-90%的cpu消耗。当使用环境为比较新的文件系统，例如ext4，btrfs，xfs或者NTFS时，作者推荐使用&lt;strong&gt;&lt;code&gt;–file-allocation=falloc&lt;/code&gt;&lt;/strong&gt;，这种方式会在瞬间完成大文件（数G）的空间分配并且不会带来额外的性能下降。&lt;/p&gt;

&lt;p&gt;如果你既没有使用cutting-edge文件系统，也没有使用linux，并且很在意系统性能，那么可以使用–file-allocation=none来关闭文件的预分配。&lt;/p&gt;

&lt;p&gt;如果你忘记了这些参数的全名或者含义，把-h放在选项或者词的前面，比如aria2c -hcrypt，这样aria2就会搜索crypt相关的选项并把他的帮助打印出来，如果aria2发现使用了-h，它会在打印出帮助信息后停止运行。&lt;/p&gt;

&lt;h2 id=&#34;基本用法&#34;&gt;基本用法&lt;/h2&gt;

&lt;h3 id=&#34;下载一个文件&#34;&gt;下载一个文件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c http://host/image.iso
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在1.10.0版中，aria2对每个host使用一个连接，你可以使用&lt;code&gt;–max-connection-per-server&lt;/code&gt; 或 &lt;code&gt;-x&lt;/code&gt;来修改&lt;/p&gt;

&lt;h3 id=&#34;使用两个连接从一个源下载文件&#34;&gt;使用两个连接从一个源下载文件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -x2 http://host/image.iso
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Ctrl+c&lt;/code&gt;可以中止当前的下载，在同样的目录运行同样的命令可以继续原来的下载，你设置可以修改&lt;code&gt;uri&lt;/code&gt;，如果他们指向的是同一个文件的话。&lt;/p&gt;

&lt;h3 id=&#34;使用两个连接下载文件&#34;&gt;使用两个连接下载文件：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -s2 http://host/image.iso http://mirror1/image.iso http://mirror2/image.iso
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：如果命令中uri的数量多于-s的值，如本例所示，aria2将会首先使用前两个uri，将第3个uri作为候补，如果前两个有一个下载失败，就会启用第3个&lt;/p&gt;

&lt;h3 id=&#34;从http或ftp服务器下载&#34;&gt;从http或ftp服务器下载：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c http://host1/file.zip ftp://host2/file.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;从任意源进行并行下载&#34;&gt;从任意源进行并行下载：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -Z http://host/file1 file2.torrent file3.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;如果仅仅指定本地磁盘上的torrent文件或者metalink-是不需要-z选项的-如&#34;&gt;如果仅仅指定本地磁盘上的torrent文件或者metalink，是不需要-Z选项的，如：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c file1.torrent file2.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;从文件中读取目的文件-并行下载&#34;&gt;从文件中读取目的文件，并行下载&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -ifiles.txt -j5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：-j参数指定了并发下载的数量，在输入文件中可以包含torrent文件和metelink&lt;br /&gt;
注：输入文件中支持添加参数，详见后续的“输入文件”章节&lt;/p&gt;

&lt;h3 id=&#34;退出时保存出错-未完成的下载-使用-session&#34;&gt;退出时保存出错/未完成的下载, 使用&lt;code&gt;session&lt;/code&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -ifiles.txt --save-session=out.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当ctrl+c或者aria2自己退出时，所有的错误，未完成的下载信息会保存到out.txt中，但通过aria2.addTorrent 和 aria2.addMetalink XML-RPC方式增加的下载不会保存。&lt;/p&gt;

&lt;h3 id=&#34;后续可以使用该文件继续未完成的下载&#34;&gt;后续可以使用该文件继续未完成的下载：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -i out.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;metalink相关下载示例&#34;&gt;Metalink相关下载示例&lt;/h2&gt;

&lt;h3 id=&#34;从远程metalink下载文件&#34;&gt;从远程metalink下载文件：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c http://host/file.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;从远程metalink下载文件-但在内存中处理metalink&#34;&gt;从远程metalink下载文件,但在内存中处理metalink：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --follow-metalink=mem http://host/file.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;通过本地metalink下载&#34;&gt;通过本地metalink下载：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -t10 --lowest-speed-limit=4000 file.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用5个server下载&#34;&gt;使用5个server下载&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -C5 file.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：当使用metalink时，-s参数不再起作用，需要使用-C选项&lt;/p&gt;

&lt;h3 id=&#34;通过多个本地metalink文件进行下载&#34;&gt;通过多个本地metalink文件进行下载：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c file1.metalink file2.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;打印metalink的内容&#34;&gt;打印metalink的内容&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -S file.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;通过序号下载指定文件&#34;&gt;通过序号下载指定文件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --select-file=1-4,8 -Mfile.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：可以通过-S选择来打印metalink文件的内容&lt;/p&gt;

&lt;h3 id=&#34;指定用户偏好从本地metalink下载文件&#34;&gt;指定用户偏好从本地metalink下载文件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --metalink-location=JP,US --metalink-version=1.1 --metalink-language=en-US file.metali
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;bittorrent相关下载&#34;&gt;BitTorrent相关下载&lt;/h2&gt;

&lt;h3 id=&#34;通过远程bittorrent文件下载&#34;&gt;通过远程BitTorrent文件下载&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c http://site/file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;通过远程bittorrent文件下载-但在内存中处理&#34;&gt;通过远程BitTorrent文件下载,但在内存中处理&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --follow-torrent=mem http://site/file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;通过本地torrent文件下载&#34;&gt;通过本地torrent文件下载:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -u40K /path/to/file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：-u, –max-upload-limit用来指定最大上传速度&lt;/p&gt;

&lt;h3 id=&#34;可以同时处理多个torrent文件&#34;&gt;可以同时处理多个torrent文件:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c /path/to/file1.torrent /path/to/file2.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;通过bittorrent-magnet-uri下载&#34;&gt;通过BitTorrent Magnet URI下载：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c &amp;quot;magnet:?xt=urn:btih:248D0A1CD08284299DE78D5C1ED359BB46717D8C&amp;amp;dn=aria2&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：需要将magnet的地址用单引号或者双引号引起来，因为里面包含’&amp;amp;&amp;lsquo;字符。当使用magnet时，强烈建议打开dht选项，–enable-dht
将metadata保存成.torrent文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --bt-save-metadata &amp;quot;magnet:?xt=urn:btih:248D0A1CD08284299DE78D5C1ED359BB46717D8C&amp;amp;dn=aria2&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个命令会将metadata信息保存在248d0a1cd08284299de78d5c1ed359bb46717d8c.torrent文件中&lt;/p&gt;

&lt;h3 id=&#34;自动调整peer节点数量&#34;&gt;自动调整peer节点数量&lt;/h3&gt;

&lt;p&gt;当所有节点的整体下载速度低于某个值时，aria2可以临时增加节点数量来获取更快的下载速率&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --bt-request-peer-speed-limit=200K file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;开启dht&#34;&gt;开启DHT&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --enable-dht http://site/file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：在1.7.2版本后，dht选项是被默认打开的。当aria2只处理http/ftp下载时，不会打开dht选项。当第一个torrent开始下载时，aria2进行DHT功能的初始化，然后一直运行到aria2退出。&lt;/p&gt;

&lt;h3 id=&#34;开启ipv6的dht&#34;&gt;开启ipv6的DHT&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --enable-dht6 --dht-listen-port=6881 --dht-listen-addr6=YOUR_GLOBAL_UNICAST_IPV6_ADDR --enable-async-dns6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：如果aria2在build时没有使用c-ares，则不需要–enable-async-dns6。aria2在ipv4和ipv6的dht中共享一些端口&lt;/p&gt;

&lt;h3 id=&#34;增加和删除tracker-uri&#34;&gt;增加和删除tracker URI：&lt;/h3&gt;

&lt;p&gt;下面这个例子将从file.torrent中移除所有的tracker的uri，然后使用”&lt;a href=&#34;http://tracker1/announce”&#34;&gt;http://tracker1/announce”&lt;/a&gt; 和 “&lt;a href=&#34;http://tracker2/announce”&#34;&gt;http://tracker2/announce”&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --bt-exclude-tracker=&amp;quot;*&amp;quot; --bt-tracker=&amp;quot;http://tracker1/announce,http://tracker2/announce&amp;quot; file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;加密&#34;&gt;加密&lt;/h3&gt;

&lt;p&gt;在默认情况下，aria2可以接收加密/非加密的连接，并且会首先尝试加密握手，如果失败才会去使用传统的BitTorrent握手
下面这个例子中，aria2将只通过加密的握手接受与建立连接。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --bt-require-crypto=true http://site/file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;存在两种加密方式，头加密和全连接加密。如果两种都可以被peer提供，aria2将默认使用头加密方式。如果要使用全连接加密，可以使用：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --bt-min-crypto-level=arc4 http://site/file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;打印torrent文件内容&#34;&gt;打印torrent文件内容&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -S file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;通过序号选择指定文件下载&#34;&gt;通过序号选择指定文件下载：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --select-file=1-4,8 -Tfile.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：index信息可以通过-S来获得&lt;/p&gt;

&lt;h3 id=&#34;修改监听端口&#34;&gt;修改监听端口&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --listen-port=6881-6883 file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：请确保指定端口可以进行tcp的上行和下行通信&lt;/p&gt;

&lt;h3 id=&#34;指定aria2完成下载后的停止条件&#34;&gt;指定aria2完成下载后的停止条件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --seed-time=120 --seed-ratio=1.0 file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：本例中，aria2会在下载完成后120分钟，或seed ratio达到1.0时退出程序&lt;/p&gt;

&lt;h3 id=&#34;设置上传速度&#34;&gt;设置上传速度&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --max-upload-limit=100K file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;seeding已经下载完成的文件&#34;&gt;Seeding已经下载完成的文件&lt;/h3&gt;

&lt;p&gt;可以使用-V选择来播种下载完成的文件，它会首先对文件进行分片的hash校验&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Seeding already downloaded file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果可以确定下载文件的正确性，可以使用–bt-seed-unverified选项来跳过文件的校验环节&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --bt-seed-unverified -d/path/to/dir file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;还可以同时播种多个torrent文件&#34;&gt;还可以同时播种多个torrent文件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --bt-seed-unverified -d/path/to/dir file1.torrent file2.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;通过index指定文件名&#34;&gt;通过index指定文件名&lt;/h3&gt;

&lt;p&gt;为了指定bt下载的文件名称，需要使用-S选线来查看torrent文件中的index信息，例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;idx|path/length
===+======================
  1|dist/base-2.6.18.iso
   |99.9MiB
---+----------------------
  2|dist/driver-2.6.18.iso
   |169.0MiB
---+----------------------
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下面的命令可以将dist/base-2.6.18.iso 保存为 /tmp/mydir/base.iso，同时将dist/driver-2.6.18.iso 保存成 /tmp/dir/driver.iso&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --dir=/tmp --index-out=1=mydir/base.iso --index-out=2=dir/driver.iso file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：当对http uri中的torrent文件使用–index-out是不成功，它只对本地的torrent文件有效。aria2也不会去记忆–index-out选项内容，在每次的继续下载或播种时都需要手工指明，而且如果没有该选项，它也不会给用户任何提醒，所以需要注意。&lt;/p&gt;

&lt;h3 id=&#34;为进行文件预览进行分片优先下载&#34;&gt;为进行文件预览进行分片优先下载&lt;/h3&gt;

&lt;p&gt;优先下载torrent中所有文件的前1MB&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --bt-prioritize-piece=head file.torrent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##使用代理服务器&lt;/p&gt;

&lt;h3 id=&#34;为所有协议-http-s-ftp-设定代理服务器&#34;&gt;为所有协议(HTTP(S)/FTP)设定代理服务器&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --all-proxy=&#39;http://proxy:8080&#39; http://host/file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：–all-proxy选项可以被特定的协议选项覆盖，如–http-proxy, –https-proxy 和 –ftp-proxy&lt;/p&gt;

&lt;h3 id=&#34;设置http代理&#34;&gt;设置http代理&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --http-proxy=&#39;http://proxy:8080&#39; http://host/file
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用需要认证的代理&#34;&gt;使用需要认证的代理&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --http-proxy=&#39;http://proxy:8080&#39; --http-proxy-user=&#39;username&#39; --http-proxy-passwd=&#39;password&#39; http://host/file
aria2c --http-proxy=&#39;http://username:password@proxy:8080&#39; http://host/file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：username and password 需要进行%转码，如过username是’myid@domain’，则转码后的结果为：’myid%40domain’。&lt;/p&gt;

&lt;h2 id=&#34;高级的http特性&#34;&gt;高级的http特性：&lt;/h2&gt;

&lt;h3 id=&#34;导入cookie&#34;&gt;导入cookie&lt;/h3&gt;

&lt;p&gt;导入Mozilla/Firefox(1.x/2.x) 和 Netscape格式的cookie&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --load-cookies=cookies.txt http://host/file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;导入Firefox3格式的cookie&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --load-cookies=cookies.sqlite http://host/file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;被浏览器或其他程序继续下载&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c -c -s2 http://host/partiallydownloadedfile.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;其他高级特性&#34;&gt;其他高级特性&lt;/h2&gt;

&lt;h3 id=&#34;下载速度限制&#34;&gt;下载速度限制&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --max-download-limit=100K http://host/file
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用-v修复受损的下载&#34;&gt;使用-V修复受损的下载&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c -V file.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：这个选项只适用于BitTorrent或者带有校验的metalink&lt;/p&gt;

&lt;h3 id=&#34;当下载速度下于某个特定值时放弃下载&#34;&gt;当下载速度下于某个特定值时放弃下载&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;aria2c --lowest-speed-limit=10K file.metalink
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;uri的参数化支持&#34;&gt;URI的参数化支持&lt;/h3&gt;

&lt;p&gt;可以使用大括号来表达一组列表&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c -P http://{host1,host2,host3}/file.iso
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以使用[]来表示一个数字序列&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c -Z -P http://host/image[000-100].png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：当所有的URI指向不同的文件时，需要使用-Z选项&lt;/p&gt;

&lt;p&gt;甚至可以指定步长&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c -Z -P http://host/image[A-Z:2].png
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;时间戳&#34;&gt;时间戳&lt;/h3&gt;

&lt;p&gt;保留源文件时间戳&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c -R http://host/file.iso
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下载完成后执行特定命令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c --on-download-complete=COMMAND http://example.org/file.iso
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;另见：&lt;code&gt;–on-download-error&lt;/code&gt;, &lt;code&gt;–on-download-start&lt;/code&gt; 和 &lt;code&gt;–on-download-stop&lt;/code&gt;，或者执行&lt;code&gt;aria2c -h#hook&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;写入/dev/null&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aria2c -d /dev -o null --allow-overwrite=true http://example.org/file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;–allow-overwrite=true&lt;/code&gt;是为了避免aria2重命名已有的/dev/null&lt;/p&gt;

&lt;h3 id=&#34;输入文件&#34;&gt;输入文件&lt;/h3&gt;

&lt;p&gt;输入文件中可以包括一系列的URI地址，也可以针对同一个资源设置多个URI：不同的URI写在一行并使用tab分割。&lt;br /&gt;
输入文件的每一行都被当作aria2的命令行参数，因此可以受到-Z和-P选项影响&lt;br /&gt;
另外，选项也可以在每行URI的后面设置，更详尽的描述可以在man page的输入文件部分得到。这种选择的含义与命令行选项的含义一致，不过只适用在他们跟随的那个URI上。&lt;/p&gt;

&lt;p&gt;如下，一个uri文件名为uri.txt，其内容如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://server/file.iso http://mirror/file.iso
  dir=/iso_images
  out=file.img

http://foo/bar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果aria2使用 &lt;code&gt;-i uri.txt -d /tmp&lt;/code&gt;,&lt;br /&gt;
那么file.iso就会被保存为/iso_images/file.img，
它的下载源为&lt;a href=&#34;http://server/file.iso&#34;&gt;http://server/file.iso&lt;/a&gt; 和 &lt;a href=&#34;http://mirror/file.iso&#34;&gt;http://mirror/file.iso&lt;/a&gt; ；
而bar文件则是从&lt;a href=&#34;http://foo/bar&#34;&gt;http://foo/bar&lt;/a&gt; 下载并且保存为 /tmp/bar&lt;/p&gt;

&lt;p&gt;*[uri]: 远程或者本地文件地址&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>