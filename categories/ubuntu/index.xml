<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ubuntu on Wixb blog</title>
    <link>http://wixb50.github.io/categories/ubuntu/</link>
    <description>Recent content in Ubuntu on Wixb blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wixb50@gmail.com (Wixb)</managingEditor>
    <webMaster>wixb50@gmail.com (Wixb)</webMaster>
    <copyright>(c) 2015 wixb.All rights reserved.</copyright>
    <lastBuildDate>Thu, 17 Dec 2015 13:50:50 +0800</lastBuildDate>
    <atom:link href="http://wixb50.github.io/categories/ubuntu/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ubuntu常见故障</title>
      <link>http://wixb50.github.io/2015/12/17/ubuntu%E5%B8%B8%E8%A7%81%E6%95%85%E9%9A%9C/</link>
      <pubDate>Thu, 17 Dec 2015 13:50:50 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/12/17/ubuntu%E5%B8%B8%E8%A7%81%E6%95%85%E9%9A%9C/</guid>
      <description>

&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;

&lt;!-- MarkdownTOC --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ssh错误-permission-denied-publickey&#34;&gt;ssh错误: permission denied (publickey)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unity菜单栏消失&#34;&gt;unity菜单栏消失&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#google-chrome更新出错&#34;&gt;google chrome更新出错&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#云服务器内存耗尽，打开虚拟内存&#34;&gt;云服务器内存耗尽，打开虚拟内存&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- /MarkdownTOC --&gt;

&lt;h2 id=&#34;ssh错误-permission-denied-publickey&#34;&gt;ssh错误: permission denied (publickey)&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;登录远程主机，将/etc/ssh/sshd_config文件中的&lt;code&gt;PasswordAuthentication no&lt;/code&gt; 改为&lt;code&gt;PasswordAuthentication yes&lt;/code&gt;。&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;重启sshd服务：&lt;code&gt;/etc/init.d/sshd restart&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;问题解决。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;原因：scp是基于ssh的拷贝服务，ssh在没有密钥登录的情况下，禁用了密码登录，故出现如上错误&lt;/p&gt;

&lt;h2 id=&#34;unity菜单栏消失&#34;&gt;unity菜单栏消失&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;安装&lt;code&gt;ccsm&lt;/code&gt;，终端打开&lt;code&gt;ccsm&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;点击&lt;code&gt;桌面-&amp;gt;ubuntu unity plugin&lt;/code&gt;，启用、忽略错误、重启即可。&lt;/li&gt;
&lt;li&gt;点击&lt;code&gt;桌面-&amp;gt;Desktop Wall&lt;/code&gt;，启用，启用桌面快捷键。&lt;/li&gt;
&lt;li&gt;问题解决。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;原因：compiz设置错误。&lt;/p&gt;

&lt;h2 id=&#34;google-chrome更新出错&#34;&gt;google chrome更新出错&lt;/h2&gt;

&lt;p&gt;1.Setup key with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.Setup repository with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo sh -c &#39;echo &amp;quot;deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main&amp;quot; &amp;gt;&amp;gt; /etc/apt/sources.list.d/google-chrome.list&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.Update package with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参考方案: &lt;a href=&#34;http://www.ubuntuupdates.org/ppa/google_chrome&#34;&gt;3rd Party Repository: Google Chrome&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;云服务器内存耗尽-打开虚拟内存&#34;&gt;云服务器内存耗尽，打开虚拟内存&lt;/h2&gt;

&lt;p&gt;virtual memory exhausted: Cannot allocate memory 问题：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ dd if=/dev/zero of=/swap bs=1024 count=1M 
Format the swap file: 
$ mkswap /swap 
Enable the swap file: 
$ swapon /swap 
Enable swap on boot: 
$ echo &amp;quot;/swap swap swap sw 0 0&amp;quot; &amp;gt;&amp;gt; /etc/fstab
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu更改源设置</title>
      <link>http://wixb50.github.io/2015/12/08/ubuntu%E6%9B%B4%E6%94%B9%E6%BA%90%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Tue, 08 Dec 2015 16:43:33 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/12/08/ubuntu%E6%9B%B4%E6%94%B9%E6%BA%90%E8%AE%BE%E7%BD%AE/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;首先备份源列表：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;而后用vim或其他编辑器打开:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo vim /etc/apt/sources.list
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;从下面列表中选择合适的源，替换掉文件中所有的内容，保存编辑好的文件:&lt;/p&gt;

&lt;p&gt;&lt;font color=&#34;red&#34;&gt;注意：一定要选对版本&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;最后，刷新列表&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;附上ubuntu14.04源：&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;网易163源：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;搜狐源：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiverse
deb http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiverse
deb http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiverse
deb http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiverse
deb http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;oschina源：
&lt;code&gt;
deb http://mirrors.oschina.net/ubuntu/ trusty main restricted universe multiverse
deb http://mirrors.oschina.net/ubuntu/ trusty-backports main restricted universe multiverse
deb http://mirrors.oschina.net/ubuntu/ trusty-proposed main restricted universe multiverse
deb http://mirrors.oschina.net/ubuntu/ trusty-security main restricted universe multiverse
deb http://mirrors.oschina.net/ubuntu/ trusty-updates main restricted universe multiverse
deb-src http://mirrors.oschina.net/ubuntu/ trusty main restricted universe multiverse
deb-src http://mirrors.oschina.net/ubuntu/ trusty-backports main restricted universe multiverse
deb-src http://mirrors.oschina.net/ubuntu/ trusty-proposed main restricted universe multiverse
deb-src http://mirrors.oschina.net/ubuntu/ trusty-security main restricted universe multiverse
deb-src http://mirrors.oschina.net/ubuntu/ trusty-updates main restricted universe multiverse
&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu搭建远程桌面服务器</title>
      <link>http://wixb50.github.io/2015/12/06/ubuntu%E6%90%AD%E5%BB%BA%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Sun, 06 Dec 2015 17:27:25 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/12/06/ubuntu%E6%90%AD%E5%BB%BA%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>&lt;p&gt;1、安装xrdp和vnc4server&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install xrdp
sudo apt-get install vnc4server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;tightvncserver在ubuntu14.04下面是不用装的，如果连接的是ubuntu12.04的话。是需要安装的&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install tightvncserver
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2、安装xfce4的桌面&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install xubuntu-desktop
echo &amp;quot;xfce4-session&amp;quot; &amp;gt;~/.xsession  #在需要远程登录的用户下执行一遍即可
sudo service xrdp restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果无法远程连接成功，记得在终端下执行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新启动系统。&lt;/p&gt;

&lt;p&gt;Windows下的操作：&lt;br /&gt;
使用&amp;raquo;窗口键+R&amp;raquo;打开&amp;raquo;运行对话框&amp;raquo;&amp;ndash;&amp;gt;输入&amp;raquo;mstsc&amp;raquo;&amp;ndash;&amp;gt;回车&amp;ndash;&amp;gt;输入Ubuntu主机的IP地址&amp;ndash;&amp;gt;&amp;laquo;连接&amp;raquo;。在Ubuntu下可以通过“ifconfig”获得本机网络连接的概况，其中包括IP地址。
填上正确的IP地址，按回车，会出现一个登陆框，我们选择“sesman-Xvnc”这个，然后输入你的Ubuntu的用户名和密码，OK！&lt;/p&gt;

&lt;p&gt;后记：使用这种方法连上Ubuntu还有个问题，就是键盘的快捷键会有点小混乱。此时断开远程桌面，在Ubuntu的实体机器上，打开管理键盘快捷键，将带有“windows”键，ubunntu显示是“mod5”键（好像是类似的，记不清了）的快捷键组合删掉即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu常用软件集合</title>
      <link>http://wixb50.github.io/2015/11/12/ubuntu%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E9%9B%86%E5%90%88/</link>
      <pubDate>Thu, 12 Nov 2015 10:23:25 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/11/12/ubuntu%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E9%9B%86%E5%90%88/</guid>
      <description>

&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;

&lt;!-- MarkdownTOC --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#broswer&#34;&gt;Broswer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#editor&#34;&gt;Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#git&#34;&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#美化&#34;&gt;美化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#添加字体&#34;&gt;添加字体&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sql&#34;&gt;SQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#思维导图&#34;&gt;思维导图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#影音&#34;&gt;影音&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fq&#34;&gt;FQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#虚拟机&#34;&gt;虚拟机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#linux-wps&#34;&gt;Linux WPS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#develop&#34;&gt;Develop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#latex&#34;&gt;LaTex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#aria2下载工具&#34;&gt;Aria2下载工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tldr命令工具&#34;&gt;tldr命令工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#终端工具terminator&#34;&gt;终端工具Terminator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#terminal增强zsh&#34;&gt;terminal增强zsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#wine-18&#34;&gt;Wine 1.8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- /MarkdownTOC --&gt;

&lt;h3 id=&#34;broswer&#34;&gt;Broswer&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.google.cn/intl/zh-CN/chrome/browser/desktop/index.html&#34;&gt;chrome&lt;/a&gt; 下载deb包安装，同步自己的chrome配置&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;editor&#34;&gt;Editor&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The Most Intelligent Java IDE:&lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;Intellij IDEA&lt;/a&gt;&lt;br /&gt;
1.安装配置好JDK环境,下载tar.gz文件,解压到&lt;code&gt;tar -zxvf ideaIU-14.tar.gz -C /usr/local/intellijIDEA(自己命名)&lt;/code&gt;;&lt;br /&gt;
2.进入安装目录下的bin目录，执行&lt;code&gt;./idea.sh&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;几个license：
(1)
key:IDEA
value:61156-YRN2M-5MNCN-NZ8D2-7B4EW-U12L4
(2)
key:huangwei
value:97493-G3A41-0SO24-W57LI-Y2UGI-JGTU2
(3)
key:itey
value:91758-T1CLA-C64F3-T7X5R-A7YDO-CRSN1
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sublimetext.com/3&#34;&gt;Sublime Text 3&lt;/a&gt; 下载deb包安装&lt;/li&gt;
&lt;li&gt;神一样的&lt;a href=&#34;http://www.vim.org/&#34;&gt;Vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/emacs/&#34;&gt;Emacs&lt;/a&gt; How to &lt;a href=&#34;http://ubuntuhandbook.org/index.php/2014/10/emacs-24-4-released-install-in-ubuntu-14-04/&#34;&gt;Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;简单的MD编辑器&lt;a href=&#34;http://sourceforge.net/projects/retext/&#34;&gt;Retext&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;git&#34;&gt;Git&lt;/h3&gt;

&lt;p&gt;安装&lt;code&gt;sudo apt-get install git&lt;/code&gt;&lt;br /&gt;
安装&lt;code&gt;sudo apt-get install git-flow&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;git客户端&lt;a href=&#34;http://www.syntevo.com/smartgit/&#34;&gt;SmartGit&lt;/a&gt; 建议直接命令行&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;删除&lt;code&gt;.smartgit&lt;/code&gt;下面的&lt;code&gt;settings.xml&lt;/code&gt;即可重新使用1个月。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;美化&#34;&gt;美化&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;默认使用Unity桌面&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;unity-tweak-tool&lt;br /&gt;
安装&lt;code&gt;sudo apt-get install unity-tweak-tool&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;也可以通过安装ubuntu-tweak来实现主题更换&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:tualatrix/ppa
sudo apt-get update
sudo apt-get install ubuntu-tweak
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;主题网址&lt;a href=&#34;http://gnome-look.org/&#34;&gt;http://gnome-look.org/&lt;/a&gt; 将解压的主题文件夹拷贝到/usr/share/themes/目录下,然后使用&lt;code&gt;unity-tweak-tool&lt;/code&gt;选择;&lt;/li&gt;
&lt;li&gt;icon网址&lt;a href=&#34;https://github.com/NitruxSA/ardis-icon-theme&#34;&gt;https://github.com/NitruxSA/ardis-icon-theme&lt;/a&gt; 将解压的主题文件夹拷贝到/usr/share/icons/目录下,然后使用&lt;code&gt;unity-tweak-tool&lt;/code&gt;选择;或者直接命令安装再设置;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;添加字体&#34;&gt;添加字体&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ubuntu添加字体非常简单，只需要在～目录下新建&lt;code&gt;.fonts&lt;/code&gt;文件夹，然后把后缀为&lt;code&gt;.ttf&lt;/code&gt;字体文件复制其中，就自动加入了。可以使用软件查看。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;sql&#34;&gt;SQL&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Mysql客户端 &lt;a href=&#34;http://dev.mysql.com/downloads/workbench/&#34;&gt;Workbench&lt;/a&gt; 下载deb安装&lt;/li&gt;
&lt;li&gt;Redis客户端 &lt;a href=&#34;http://redisdesktop.com/&#34;&gt;Redis Desktop Manager&lt;/a&gt; 下载deb安装&lt;/li&gt;
&lt;li&gt;Mongo客户端 &lt;a href=&#34;http://robomongo.org/&#34;&gt;Robomongo&lt;/a&gt; 下载deb安装&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;思维导图&#34;&gt;思维导图&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;最流行的思维导图 &lt;a href=&#34;http://www.xmind.net/cn/&#34;&gt;XMind&lt;/a&gt; 下载deb安装&lt;/li&gt;
&lt;li&gt;百度在线脑图 &lt;a href=&#34;http://naotu.baidu.com/&#34;&gt;百度脑图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;影音&#34;&gt;影音&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VLC Media Player&lt;/code&gt; 软件商店安装&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;fq&#34;&gt;FQ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;开放网络客户端 &lt;a href=&#34;https://getlantern.org/&#34;&gt;Lantern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shadowsocks.org/en/index.html&#34;&gt;Shadowsocks&lt;/a&gt; 装好之后还要设置浏览器代理&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.xinshangshangxin.com/2015/06/21/linux%E7%BB%88%E7%AB%AF%E7%BF%BB%E5%A2%99/&#34;&gt;tsocks&lt;/a&gt; 终端socks翻墙工具&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;安装PPA is for Ubuntu &amp;gt;= 14.04.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:hzwhuang/ss-qt5
sudo apt-get update
sudo apt-get install shadowsocks-qt5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置&lt;strong&gt;火狐浏览器&lt;/strong&gt;，代理设置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;选择Manual Proxy Configuration，在Socks Host写入127.0.0.1，Port 1080。下面选Socks v5。点OK确认。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以代理模式启动&lt;strong&gt;Chrome&lt;/strong&gt;命令如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;google-chrome --proxy-server=socks5://127.0.0.1:1080
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;[NOTICE] : Chrome推荐使用&lt;a href=&#34;https://github.com/FelisCatus/SwitchyOmega/releases&#34;&gt;SwitchyOmega&lt;/a&gt;插件进行设置。自动规则：&lt;a href=&#34;https://github.com/FelisCatus/SwitchyOmega/wiki/GFWList&#34;&gt;wiki-GEWList&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;虚拟机&#34;&gt;虚拟机&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;开源&lt;a href=&#34;https://www.virtualbox.org/wiki/Downloads&#34;&gt;VirtualBox&lt;/a&gt; 下载deb安装&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;linux-wps&#34;&gt;Linux WPS&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.wps.cn/&#34;&gt;WPS官网&lt;/a&gt;下载linux下的安装包，下载&lt;a href=&#34;http://pan.baidu.com/s/1o7wTo7o&#34;&gt;Symbol 字体安装包&lt;/a&gt;安装&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;#安装wps
sudo dpkg -i wps-office_9.1.0.4975-a19p1_amd64.deb
#安装symbol字体包
sudo dpkg -i symbol-fonts_1.2_all.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;develop&#34;&gt;Develop&lt;/h3&gt;

&lt;p&gt;Frontend：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/creationix/nvm&#34;&gt;nvm&lt;/a&gt; node版本管理,安装&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node&lt;/a&gt; 使用nvm安装,或者&lt;a href=&#34;https://linux.cn/article-5766-1.html&#34;&gt;编译安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;null-link&#34;&gt;npm&lt;/a&gt; node包管理器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;null-link&#34;&gt;bower&lt;/a&gt; 前端开发包管理器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;null-link&#34;&gt;gulp&lt;/a&gt; 构建工具&lt;/li&gt;
&lt;li&gt;[grunt-cli]() 比较老的构建工具&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Backend：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[Go]() 解压存放&lt;code&gt;/usr/local/go&lt;/code&gt;,配置好&lt;code&gt;GOROOT、GOPATH&lt;/code&gt;和path环境。&lt;code&gt;GOPATH&lt;/code&gt;最好一个就够了。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;GoTools：&lt;code&gt;gocode&lt;/code&gt;代码自动化提示工具。&lt;code&gt;godep&lt;/code&gt;go包管理器。&lt;code&gt;goconvey&lt;/code&gt;go测试工具。
Tips：如需sudo也支持go命令,执行链接命令：&lt;code&gt;sudo ln -s /usr/local/go/bin/go /usr/bin/go&lt;/code&gt;。&lt;br /&gt;
Personal：&lt;code&gt;GOROOT&lt;/code&gt;配置在&lt;code&gt;/etc/profile&lt;/code&gt;内，&lt;code&gt;GOPATH&lt;/code&gt;配置在&lt;code&gt;～/.bashrc&lt;/code&gt;，最好$GOPATH/bin添加到PATH去。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;[Python]() 包管理器安装python(2.X版本)、python3(3.X版本)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;python包管理器pip：&lt;code&gt;sudo apt-get install python-pip&lt;/code&gt;&lt;br /&gt;
python包管理器pip3：&lt;code&gt;sudo apt-get install python3-pip&lt;/code&gt;&lt;br /&gt;
python虚拟环境：&lt;code&gt;sudo pip install virtualenv&lt;/code&gt;，参考&lt;a href=&#34;https://segmentfault.com/a/1190000004079979&#34;&gt;virtualenv 和 virtualenvwrapper 实践&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;# virtualenvwrapper的配置到./bashrc
export WORKON_HOME=&#39;~/.virtualenvs&#39;
source /usr/local/bin/virtualenvwrapper.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;[gradle]() java包管理器,构建工具&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Server：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[Docker]() 容器化服务器&lt;/li&gt;
&lt;li&gt;[vagrant]() 虚拟机管理工具&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;latex&#34;&gt;LaTex&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;TexLive2015安装&lt;/p&gt;

&lt;p&gt;下载地址：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://mirrors.ctan.org/systems/texlive/Images/texlive2015.iso&#34;&gt;官方镜像&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mirrors.ustc.edu.cn/CTAN/systems/texlive/Images/texlive2015.iso&#34;&gt;USTC镜像&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;挂载ISO镜像&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mount -o loop texlive2015.iso  /mnt/
cd /mnt
sudo ./install-tl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;出现选项后，输入 I 直接安装（也可以更改选项）。不出意外的话，5分钟应该就OK了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;环境变量&lt;/strong&gt;&lt;br /&gt;
在当前用户的 ~/.bashrc 中加入如下语句：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# TeX Live 2015
export MANPATH=${MANPATH}:/usr/local/texlive/2015/texmf-dist/doc/man
export INFOPATH=${INFOPATH}:/usr/local/texlive/2015/texmf-dist/doc/info
export PATH=${PATH}:/usr/local/texlive/2015/bin/x86_64-linux  #建议还是把这个配置到/etc/profile里面去，这样texstudio打开能够识别

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面的建议如果出现找不到tex环境时候可以用一下。&lt;br /&gt;
&lt;strong&gt;卸载ISO镜像&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd
$ sudo umount /mnt/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://seisman.info/install-texlive-under-linux.html&#34;&gt;参考文档&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;TexStudio&lt;br /&gt;
&lt;a href=&#34;http://texstudio.sourceforge.net/&#34;&gt;官网&lt;/a&gt;下载deb安装包安装即可&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;aria2下载工具&#34;&gt;Aria2下载工具&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://aria2.sourceforge.net/&#34;&gt;官网介绍&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install aria2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;tldr命令工具&#34;&gt;tldr命令工具&lt;/h3&gt;

&lt;p&gt;下载go client的&lt;code&gt;platform binaries&lt;/code&gt;的&lt;code&gt;deb&lt;/code&gt;包安装：&lt;a href=&#34;https://github.com/tldr-pages/tldr&#34;&gt;github主页&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg -i tldr_0.1.0_amd64.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;终端工具terminator&#34;&gt;终端工具Terminator&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;安装&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install terminator
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;然后利用 Debian 的重新配置命令选择默认终端：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo update-alternatives --config x-terminal-emulator
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;terminator配置文件在~/.config/terminator/config 可以通过这个配置文件配置terminator的字体和颜色.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;font = Monaco 10  #设置体字
background_color = &amp;quot;#204070&amp;quot; # 背景颜色
foreground_color = &amp;quot;#F0F0F0&amp;quot; # 字体颜色
cursor_blink = True          # 设置光标
scrollbar_position = disabled # 禁用滚动条
titlebars = no # 禁用标题栏
background_darkness = 0.4
background_type = transparent # 背景类型可以设置为图片
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更多配置见：&lt;code&gt;man terminator_config&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;快捷键&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;F11 #Toggle fullscreen
Ctrl + Shift+ O #Split terminals horizontally
Ctrl + Shift+ E #Split terminals vertically
Ctrl + Shift+ W #Close current Panel
Ctrl + Shift+ T #Open new tab

Ctrl+Shift+C 复制
Ctrl+Shift+V 粘贴
Ctrl+Shift+N 或者 Ctrl+Tab 在分割的各窗口之间切换
Ctrl+Shift+X 将分割的某一个窗口放大至全屏使用
Ctrl+Shift+Z 从放大至全屏的某一窗口回到多窗格界面

Alt + ↑ #Move to the terminal above the current one
Alt + ↓ #Move to the terminal below the current one
Alt + ← #Move to the terminal left of the current one
Alt + → #Move to the terminal right of the current one
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;一个不错的配置(可将&lt;code&gt;palette&lt;/code&gt;注释,采用默认的配色方案)&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;[global_config]
  title_transmit_bg_color = &amp;quot;#d30102&amp;quot;
  focus = system
  suppress_multiple_term_dialog = True
[keybindings]
[profiles]
  [[default]]
    palette = &amp;quot;#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#586e75:#657b83:#839496:#6c71c4:#93a1a1:#fdf6e3&amp;quot;
    copy_on_selection = True
    background_image = None
    background_darkness = 0.85
    background_type = transparent
    use_system_font = False
    cursor_color = &amp;quot;#eee8d5&amp;quot;
    foreground_color = &amp;quot;#839496&amp;quot;
    show_titlebar = False
    font = Ubuntu Mono 14
    background_color = &amp;quot;#002b36&amp;quot;
  [[solarized-dark]]
    palette = &amp;quot;#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#586e75:#657b83:#839496:#6c71c4:#93a1a1:#fdf6e3&amp;quot;
    background_color = &amp;quot;#002b36&amp;quot;
    background_image = None
    cursor_color = &amp;quot;#eee8d5&amp;quot;
    foreground_color = &amp;quot;#839496&amp;quot;
  [[solarized-light]]
    palette = &amp;quot;#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#586e75:#657b83:#839496:#6c71c4:#93a1a1:#fdf6e3&amp;quot;
    background_color = &amp;quot;#fdf6e3&amp;quot;
    background_image = None
    cursor_color = &amp;quot;#002b36&amp;quot;
    foreground_color = &amp;quot;#657b83&amp;quot;
[layouts]
  [[default]]
    [[[child1]]]
      type = Terminal
      parent = window0
      profile = default
    [[[window0]]]
      type = Window
      parent = &amp;quot;&amp;quot;
[plugins]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;透明高亮很Geek.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;右键目录打开&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.安装工具：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install nautilus-actions -y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.启动改工具,Unity中输入nautilus-actions-config-tool,&lt;/p&gt;

&lt;p&gt;3.见&lt;a href=&#34;http://www.ikey4u.com/linux-terminator-settings/&#34;&gt;配置教程&lt;/a&gt;  重要的启动参数：&lt;code&gt;--working-directory=%D/%w&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;4.重启生效&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;参考资料&lt;br /&gt;
&lt;a href=&#34;http://blog.codinglabs.org/articles/getting-started-with-ubuntu.html&#34;&gt;开始使用Ubuntu作为工作环境&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;terminal增强zsh&#34;&gt;terminal增强zsh&lt;/h3&gt;

&lt;p&gt;依次执行以下步骤安装：(&lt;a href=&#34;https://github.com/robbyrussell/oh-my-zsh&#34;&gt;oh-my-zsh&lt;/a&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install zsh  #先安装zsh
$ sh -c &amp;quot;$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)&amp;quot;  #配置oh-my-zsh,zsh的自动配置
$ chsh -s /bin/zsh  #替换bash为zsh
$ sudo reboot  #重启生效
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改&lt;code&gt;～/zshrc&lt;/code&gt;文件，将主题改为&lt;code&gt;ZSH_THEME=&amp;quot;gentoo&amp;quot;&lt;/code&gt;显示完整路径。&lt;br /&gt;
将以前&lt;code&gt;~/bashrc&lt;/code&gt;中的环境变量复制到&lt;code&gt;～/zshrc&lt;/code&gt;文件最后(如果想用)。&lt;/p&gt;

&lt;h3 id=&#34;wine-1-8&#34;&gt;Wine 1.8&lt;/h3&gt;

&lt;p&gt;1、对于 64 位系统，需要开启 32 位架构支持：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg --add-architecture i386 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2、添加 Wine 官方 PPA：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:wine/wine-builds 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3、PPA 添加完成后，我们先刷新包缓存再安装 Wine 1.8：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update 
sudo apt-get install --install-recommends winehq-devel 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你安装有老版本 Wine，执行上述命令时会自动被替换更新。&lt;/p&gt;

&lt;p&gt;4、安装完成后，可以使用如下命令来初始化 Wine 1.8 配置：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;winecfg 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NOTE:&lt;a href=&#34;https://wiki.winehq.org/Gecko&#34;&gt;手动安装Gecko&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu常用命令集合</title>
      <link>http://wixb50.github.io/2015/11/07/ubuntu%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%9B%86%E5%90%88/</link>
      <pubDate>Sat, 07 Nov 2015 22:07:33 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/11/07/ubuntu%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%9B%86%E5%90%88/</guid>
      <description>

&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;

&lt;!-- MarkdownTOC --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#shutdown-命令&#34;&gt;shutdown 命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ln-命令&#34;&gt;ln 命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#linux下设置ssh无密码登录&#34;&gt;linux下设置ssh无密码登录&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1生成公钥和私钥&#34;&gt;1.生成公钥和私钥&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2导入公钥到认证文件更改权限&#34;&gt;2.导入公钥到认证文件,更改权限&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#21-导入本机&#34;&gt;2.1 导入本机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#22-导入要免密码登录的服务器&#34;&gt;2.2 导入要免密码登录的服务器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#23-在服务器上更改权限&#34;&gt;2.3 在服务器上更改权限&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3测试&#34;&gt;3.测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dpkg命令&#34;&gt;dpkg命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#apt命令&#34;&gt;apt命令&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#软件安装后相关文件位置&#34;&gt;软件安装后相关文件位置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#设置su密码的命令&#34;&gt;设置su密码的命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#新增user&#34;&gt;新增User&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fg、bg、jobs、、nohup、ctrlz、ctrlc-、kill命令&#34;&gt;fg、bg、jobs、&amp;amp;、nohup、ctrl+z、ctrl+c 、kill命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#kill，killall，pkill，xkill-命令&#34;&gt;kill，killall，pkill，xkill 命令&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- /MarkdownTOC --&gt;

&lt;h2 id=&#34;shutdown-命令&#34;&gt;shutdown 命令&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;shutdown –help  #可以查看shutdown命令如何使用，当然也可以使用man shutdown命令。
shutdown -h now #现在立即关机
shutdown -r now #现在立即重启
shutdown -r +3 #三分钟后重启
shutdown -h +3 “The System will shutdown after 3 minutes” #提示使用者将在三分钟后关机
shutdown -r 20:23 #在20：23时将重启计算机
shutdown -r 20:23 &amp;amp; #可以将在20：23时重启的任务放到后台去，用户可以继续操作终端
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ln-命令&#34;&gt;ln 命令&lt;/h2&gt;

&lt;p&gt;功能是为某一个文件或目录在另外一个位置建立一个同步的链接：&lt;/p&gt;

&lt;p&gt;这里有两点要注意：ln的链接又 软链接和硬链接两种，软链接就是ln –s ** **，它只会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，硬链接ln ** **，没有参数-s， 它会在你选定的位置上生成一个和源文件大小相同的文件。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;这个命令最常用的参数是-s，具体用法是(软链接)：&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo ln -s 源文件 目标文件
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;删除链接&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;rm -rf   symbolic_name   注意不是rm -rf   symbolic_name/
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;linux下设置ssh无密码登录&#34;&gt;linux下设置ssh无密码登录&lt;/h2&gt;

&lt;p&gt;原理说明
&amp;gt;密匙认证需要依靠密匙，&lt;br /&gt;
1.首先创建一对密匙（包括公匙和密匙，并且用公匙加密的数据只能用密匙解密），并把公匙放到需要远程服务器上。&lt;br /&gt;
2.这样当登录远程 服务器时，客户端软件就会向服务器发出请求，请求用你的密匙进行认证。&lt;br /&gt;
3.服务器收到请求之后，先在你在该服务器的宿主目录下寻找你的公匙，然后检查该公匙是 否是合法，如果合法就用公匙加密一随机数（即所谓的challenge）并发送给客户端软件。&lt;br /&gt;
4.客户端软件收到 “challenge”之后就用私匙解密再把它发送给服务器。因为用公匙加密的数据只能用密匙解密，服务器经过比较就可以知道该客户连接的合法性。&lt;/p&gt;

&lt;h3 id=&#34;1-生成公钥和私钥&#34;&gt;1.生成公钥和私钥&lt;/h3&gt;

&lt;p&gt;Shell代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh-keygen -t rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;默认在 ~/.ssh目录生成两个文件：&lt;br /&gt;
　id_rsa      ：私钥&lt;br /&gt;
　id_rsa.pub  ：公钥&lt;/p&gt;

&lt;h3 id=&#34;2-导入公钥到认证文件-更改权限&#34;&gt;2.导入公钥到认证文件,更改权限&lt;/h3&gt;

&lt;h4 id=&#34;2-1-导入本机&#34;&gt;2.1 导入本机&lt;/h4&gt;

&lt;p&gt;Shell代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat ~/.ssh/id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys  
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-2-导入要免密码登录的服务器&#34;&gt;2.2 导入要免密码登录的服务器&lt;/h4&gt;

&lt;p&gt;方法一：
首先将公钥复制到服务器，Shell代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;scp ~/.ssh/id_rsa.pub xxx@host:~/id_rsa.pub  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后，将公钥导入到认证文件，这一步的操作在服务器上进行，Shell代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat ~/id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;方法二：
直接用命令将公钥添加到远程服务器上去&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat ~/.ssh/id_rsa.pub | ssh root@[your.ip.address.here] &amp;quot;cat &amp;gt;&amp;gt; ~/.ssh/authorized_keys&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以执行测试登录，如果无任何错误提示，可以输密码登录，但就是不能无密码登录，则执行下步。&lt;/p&gt;

&lt;h4 id=&#34;2-3-在服务器上更改权限&#34;&gt;2.3 在服务器上更改权限&lt;/h4&gt;

&lt;p&gt;Shell 代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod 700 ~/.ssh
chmod 600 ~/.ssh/authorized_keys 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-测试&#34;&gt;3.测试&lt;/h3&gt;

&lt;p&gt;执行Shell&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh xxx@host
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第一次登录可能需要yes确认，之后就可以直接登录了。&lt;/p&gt;

&lt;h2 id=&#34;dpkg命令&#34;&gt;dpkg命令&lt;/h2&gt;

&lt;p&gt;以下是一些 Dpkg 的普通用法：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;dpkg -i&lt;br /&gt;
    安装一个 Debian 软件包，如你手动下载的文件。&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;dpkg -c&lt;br /&gt;
    列出包的内容。&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;dpkg -I&lt;br /&gt;
   从 中提取包裹信息。&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;dpkg -r&lt;br /&gt;
    移除一个已安装的包裹。&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;dpkg -P&lt;br /&gt;
  完全清除一个已安装的包裹。和 remove 不同的是，remove 只是删掉数据和可执行文件，purge 另外还删除所有的配制文件。&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;dpkg -L&lt;br /&gt;
  列出 安装的所有文件清单。同时请看 dpkg -c 来检查一个 .deb 文件的内容。&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;dpkg -s&lt;br /&gt;
  显示已安装包裹的信息。同时请看 apt-cache 显示 Debian 存档中的包裹信息，以及 dpkg -I 来显示从一个 .deb 文件中提取的包裹信息。&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;dpkg-reconfigure&lt;br /&gt;
  重新配制一个已经安装的包裹，如果它使用的是 debconf (debconf 为包裹安装提供了一个统一的配制界面)。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;apt命令&#34;&gt;apt命令&lt;/h2&gt;

&lt;h3 id=&#34;软件安装后相关文件位置&#34;&gt;软件安装后相关文件位置&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载的软件存放位置&lt;/p&gt;

&lt;p&gt;/var/cache/apt/archives&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装后软件默认位置&lt;/p&gt;

&lt;p&gt;/usr/share&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;可执行文件位置&lt;/p&gt;

&lt;p&gt;/usr/bin&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;配置文件位置&lt;/p&gt;

&lt;p&gt;/etc&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;lib文件位置&lt;/p&gt;

&lt;p&gt;/usr/lib&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;**其他几个和apt-get相关的目录:  **&lt;/p&gt;

&lt;p&gt;/var/lib/dpkg/available&lt;br /&gt;
文件的内容是软件包的描述信息, 该软件包括当前系统所使用的 Debian 安装源中的所有软件包,其中包括当前系统中已安装的和未安装的软件包.&lt;/p&gt;

&lt;p&gt;/var/cache/apt/archives&lt;br /&gt;
目录是在用 apt-get install 安装软件时，软件包的临时存放路径&lt;/p&gt;

&lt;p&gt;/etc/apt/sources.list&lt;br /&gt;
存放的是软件源站点, 当你执行 sudo apt-get install xxx 时，Ubuntu 就去这些站点下载软件包到本地并执行安装&lt;/p&gt;

&lt;p&gt;/var/lib/apt/lists&lt;br /&gt;
使用apt-get update命令会从/etc/apt/sources.list中下载软件列表，并保存到该目录&lt;/p&gt;

&lt;h2 id=&#34;设置su密码的命令&#34;&gt;设置su密码的命令&lt;/h2&gt;

&lt;p&gt;Ubuntu安装之默认状态下是不能使用su命令了，如果我们要使用su命令需要把root设置一个密码这样就可以使用su命令了。&lt;/p&gt;

&lt;p&gt;使用sudo&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo passwd  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;系统提示输入密码，即安装时的用户密码，然后，系统提示输入两次新密码，输入完毕后，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;su  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;即可进入su，具备了相应的权限了.&lt;/p&gt;

&lt;p&gt;[NOTICE] : 在terminal中利用su命令就可以切换到root用户了。&lt;br /&gt;
注：su和sudo的区别是：&lt;br /&gt;
1). su的密码是root的密码，而sudo的密码是用户的密码；&lt;br /&gt;
2). su直接将身份变成root，而sudo是以用户登录后以root的身份运行命令，不需要知道root密码；&lt;/p&gt;

&lt;h2 id=&#34;新增user&#34;&gt;新增User&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;使用有权限的用户，在终端里输入&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo adduser username
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后一直回车即可，新建成功。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;添加sudo用户&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;当你安装Ubuntu的时候，它会自动添加第一个用户到sudo组，允许这个用户通过键入其自身帐户密码来获得超级用户(root)身份。然而，系统不会再自动添加其他的用户到sudo组当中去。如果你想在你的共享系统上授予某人某些超级用户特权，你必须给予他们sudo权利。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;要添加新用户到sudo，最简单的方式就是使用 usermod 命令。运行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo usermod -G sudo username
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果用户已经是其他组的成员，你需要添加 -a 这个选项，象这样&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo usermod -a -G sudo username
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;fg-bg-jobs-nohup-ctrl-z-ctrl-c-kill命令&#34;&gt;fg、bg、jobs、&amp;amp;、nohup、ctrl+z、ctrl+c 、kill命令&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&amp;amp;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;加在一个命令的最后，可以把这个命令放到后台执行，如

watch  -n 10 sh  test.sh  &amp;amp;  #每10s在后台执行一次test.sh脚本
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;ctrl + z&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;可以将一个正在前台执行的命令放到后台，并且处于暂停状态。
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;jobs&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;查看当前有多少在后台运行的命令

jobs -l选项可显示所有任务的PID，jobs的状态可以是running, stopped, Terminated。但是如果任务被终止了（kill），shell 从当前的shell环境已知的列表中删除任务的进程标识。
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;fg&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;将后台中的命令调至前台继续运行。如果后台中有多个命令，可以用fg %jobnumber（是命令编号，不是进程号）将选中的命令调出。
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;bg&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;将一个在后台暂停的命令，变成在后台继续执行。如果后台中有多个命令，可以用bg %jobnumber将选中的命令调出。
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;kill&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;法子1：通过jobs命令查看job号（假设为num），然后执行kill %num
法子2：通过ps命令查看job的进程号（PID，假设为pid），然后执行kill pid
前台进程的终止：Ctrl+c
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;nohup&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;如果让程序始终在后台执行，即使关闭当前的终端也执行（之前的&amp;amp;做不到），这时候需要nohup。该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。关闭中断后，在另一个终端jobs已经无法看到后台跑得程序了，此时利用ps（进程查看命令）

ps -aux | grep &amp;quot;test.sh&amp;quot;  #a:显示所有程序 u:以用户为主的格式来显示 x:显示所有程序，不以终端机来区分
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;kill-killall-pkill-xkill-命令&#34;&gt;kill，killall，pkill，xkill 命令&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;kill&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;kill ［信号代码］ 进程ID（kill  -pid）
－s：指定发送的信号。 
－p：模拟发送信号。 
－l：指定信号的名称列表。 
pid：要中止进程的ID号。 
Signal：表示信号。
注：信号代码可以省略；我们常用的信号代码是-9 ，表示强制终止；对于僵尸进程，可以用kill -9 来强制终止退出；
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;killall&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;killall 通过程序的名字，直接杀死所有进程。
用法：killall 正在运行的程序名
killall 也和ps或pgrep 结合使用，比较方便；通过ps或pgrep 来查看哪些程序在运行
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;pkill&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;pkill 和killall 应用方法差不多，也是直接杀死运行中的程序；如果您想杀掉单个进程，请用kill 来杀掉。
用法：pkill 正在运行的程序名
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;xkill&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;xkill 是在桌面用的杀死图形界面的程序。比如当firefox 出现崩溃不能退出时，点鼠标就能杀死firefox 。
当xkill运行时出来和个人脑骨的图标，哪个图形程序崩溃一点就OK了。如果您想终止xkill ，就按右键取消；
xkill 调用方法：
[root@localhost ~]# xkill
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu网络配置</title>
      <link>http://wixb50.github.io/2015/11/07/ubuntu%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sat, 07 Nov 2015 20:39:30 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/11/07/ubuntu%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</guid>
      <description>

&lt;h3 id=&#34;ubuntu配置网络静态ip&#34;&gt;Ubuntu配置网络静态IP&lt;/h3&gt;

&lt;p&gt;Ubuntu网络配置文件是在/etc/network/interfaces&lt;br /&gt;
&amp;gt;默认文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).
# The loopback network interface
auto lo
iface lo inet loopback
# The primary network interface
auto eth0
iface eth0 inet dhcp
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;如果我们想要配置静态IP可以这样：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).
# The loopback network interface
auto lo
#iface lo inet loopback
# The primary network interface        #此行注释掉
auto eth0
iface eth0 inet static                 #将&amp;quot;dhcp&amp;quot;修改为&amp;quot;static&amp;quot;
address 10.0.0.125                     #增加下面三行
gateway 10.0.0.2
netmask 255.255.255.0
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;配置DNS，在/etc/resolv.conf文件中&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)
#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
nameserver 10.0.0.2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重启服务器。&lt;/p&gt;

&lt;h3 id=&#34;ubuntu-14-04-重启后dns配置丢失问题的解决方案&#34;&gt;Ubuntu 14.04 重启后DNS配置丢失问题的解决方案&lt;/h3&gt;

&lt;p&gt;每次修改DNS配置文件 /etc/resolv.conf 重启后就会失效。从网上查知，这个文件是动态创建，所以每次重启都会被重写。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;更改方式有以下两种如下：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vi /etc/network/interfaces
dns-nameservers 8.8.8.8 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vi /etc/resolvconf/resolv.conf.d/base
nameserver 8.8.8.8
nameserver 114.114.114.114
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存，然后执行：&lt;code&gt;resolvconf -u&lt;/code&gt;。&lt;br /&gt;
重启之后，/etc/resolv.conf里面的内容被加载成了base中的数据。&lt;br /&gt;
所以到此为止成功解决了重启后DNS配置丢失的问题。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu系统变量配置</title>
      <link>http://wixb50.github.io/2015/11/03/ubuntu%E7%B3%BB%E7%BB%9F%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Tue, 03 Nov 2015 13:40:25 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/11/03/ubuntu%E7%B3%BB%E7%BB%9F%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/</guid>
      <description>&lt;pre&gt;&lt;code&gt;Ubuntu Linux系统环境变量配置文件：   
/etc/profile : 在登录时,操作系统定制用户环境时使用的第一个文件 ,此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行。 

/etc /environment : 在登录时操作系统使用的第二个文件, 系统在读取你自己的profile前,设置环境文件的环境变量。 

~/.profile :  在登录时用到的第三个文件 是.profile文件,每个用户都可使用该文件输入专用于自己使用的shell信息,当用户登录时,该文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc文件。 

/etc/bashrc : 为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取. 

~/.bashrc : 该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该该文件被读取。 



PASH环境变量的设置方法： 

方法一：用户主目录下的.profile或.bashrc文件（推荐） 

登录到你的用户（非root），在终端输入： 
$ sudo gedit ~/.profile(or .bashrc) 
可以在此文件末尾加入PATH的设置如下： 
export PATH=”$PATH:your path1:your path2 ...” 
保存文件，注销再登录，变量生效。 
该方式添加的变量只对当前用户有效。 

方法二：系统目录下的profile文件（谨慎） 

在系统的etc目录下，有一个profile文件，编辑该文件： 
$ sudo gedit /etc/profile 
在最后加入PATH的设置如下： 
export PATH=”$PATH:your path1:your path2 ...” 
该文件编辑保存后，重启系统，变量生效。 
该方式添加的变量对所有的用户都有效。 

方法三：系统目录下的 environment 文件（谨慎） 

在系统的etc目录下，有一个environment文件，编辑该文件： 
$ sudo gedit /etc/environment 
找到以下的 PATH 变量： 
PATH=&amp;quot;&amp;lt;......&amp;gt;&amp;quot; 
修改该 PATH 变量，在其中加入自己的path即可，例如： 
PATH=&amp;quot;&amp;lt;......&amp;gt;:your path1:your path2 …&amp;quot; 
各个path之间用冒号分割。该文件也是重启生效，影响所有用户。 
注意这里不是添加export PATH=… 。 

方法四：直接在终端下输入 

$ sudo export PATH=&amp;quot;$PATH:your path1:your path2 …&amp;quot; 
这种方式变量立即生效，但用户注销或系统重启后设置变成无效，适合临时变量的设置。 


注 意：方法二和三的修改需要谨慎，尤其是通过root用户修改，如果修改错误，将可能导致一些严重的系统错误。因此笔者推荐使用第一种方法。另外嵌入式 Linux的开发最好不要在root下进行（除非你对Linux已经非常熟悉了！！），以免因为操作不当导致系统严重错误。 

下面是一个对environment文件错误修改导致的问题以及解决方法示例： 

问题：因为不小心在 etc/environment里设在环境变量导致无法登录 
提示：不要在 etc/environment里设置 export PATH这样会导致重启后登录不了系统 
解决方法： 
在登录界面 alt +ctrl+f1进入命令模式，如果不是root用户需要键入（root用户就不许这么罗嗦，gedit编辑会不可显示） 
/usr/bin/sudo /usr/bin/vi /etc/environment 
光标移到export PATH** 行，连续按 d两次删除该行； 
输入:wq保存退出； 
然后键入/sbin/reboot重启系统（可能会提示need to boot，此时直接power off）
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>