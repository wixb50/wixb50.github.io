<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wixb blog</title>
    <link>http://wixb50.github.io/</link>
    <description>Recent content on Wixb blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wixb50@gmail.com (Wixb)</managingEditor>
    <webMaster>wixb50@gmail.com (Wixb)</webMaster>
    <copyright>(c) 2015 wixb.All rights reserved.</copyright>
    <lastBuildDate>Fri, 11 Dec 2015 18:38:38 +0800</lastBuildDate>
    <atom:link href="http://wixb50.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Docker Batch Operation</title>
      <link>http://wixb50.github.io/2015/12/11/docker-batch-operation/</link>
      <pubDate>Fri, 11 Dec 2015 18:38:38 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/12/11/docker-batch-operation/</guid>
      <description>

&lt;p&gt;批量操作docker images or container commander.&lt;/p&gt;

&lt;h4 id=&#34;remove-all-stopped-containers&#34;&gt;Remove all stopped containers.&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;docker rm $(docker ps -a -q)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;remove-all-containers&#34;&gt;Remove all containers.&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;docker rm $(docker ps -a -q)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;remove-all-untagged-images&#34;&gt;Remove all untagged images&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;docker rmi $(docker images | grep &amp;quot;^&amp;lt;none&amp;gt;&amp;quot; | awk &amp;quot;{print $3}&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;remove-all-images&#34;&gt;Remove all images&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;docker rmi $(docker images | grep \ | awk &#39;{print $3}&#39;)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu更改源设置</title>
      <link>http://wixb50.github.io/2015/12/08/ubuntu%E6%9B%B4%E6%94%B9%E6%BA%90%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Tue, 08 Dec 2015 16:43:33 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/12/08/ubuntu%E6%9B%B4%E6%94%B9%E6%BA%90%E8%AE%BE%E7%BD%AE/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;首先备份源列表：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;而后用vim或其他编辑器打开:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo vim /etc/apt/sources.list
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;从下面列表中选择合适的源，替换掉文件中所有的内容，保存编辑好的文件:&lt;/p&gt;

&lt;p&gt;&lt;font color=&#34;red&#34;&gt;注意：一定要选对版本&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;最后，刷新列表&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;附上ubuntu14.04源：&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;网易163源：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;搜狐源：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiverse
deb http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiverse
deb http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiverse
deb http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiverse
deb http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;oschina源：
&lt;code&gt;
deb http://mirrors.oschina.net/ubuntu/ trusty main restricted universe multiverse
deb http://mirrors.oschina.net/ubuntu/ trusty-backports main restricted universe multiverse
deb http://mirrors.oschina.net/ubuntu/ trusty-proposed main restricted universe multiverse
deb http://mirrors.oschina.net/ubuntu/ trusty-security main restricted universe multiverse
deb http://mirrors.oschina.net/ubuntu/ trusty-updates main restricted universe multiverse
deb-src http://mirrors.oschina.net/ubuntu/ trusty main restricted universe multiverse
deb-src http://mirrors.oschina.net/ubuntu/ trusty-backports main restricted universe multiverse
deb-src http://mirrors.oschina.net/ubuntu/ trusty-proposed main restricted universe multiverse
deb-src http://mirrors.oschina.net/ubuntu/ trusty-security main restricted universe multiverse
deb-src http://mirrors.oschina.net/ubuntu/ trusty-updates main restricted universe multiverse
&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu搭建远程桌面服务器</title>
      <link>http://wixb50.github.io/2015/12/06/ubuntu%E6%90%AD%E5%BB%BA%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Sun, 06 Dec 2015 17:27:25 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/12/06/ubuntu%E6%90%AD%E5%BB%BA%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>&lt;p&gt;1、安装xrdp和vnc4server&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install xrdp
sudo apt-get install vnc4server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;tightvncserver在ubuntu14.04下面是不用装的，如果连接的是ubuntu12.04的话。是需要安装的&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install tightvncserver
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2、安装xfce4的桌面&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install xubuntu-desktop
echo &amp;quot;xfce4-session&amp;quot; &amp;gt;~/.xsession  #在需要远程登录的用户下执行一遍即可
sudo service xrdp restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果无法远程连接成功，记得在终端下执行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新启动系统。&lt;/p&gt;

&lt;p&gt;Windows下的操作：&lt;br /&gt;
使用&amp;raquo;窗口键+R&amp;raquo;打开&amp;raquo;运行对话框&amp;raquo;&amp;ndash;&amp;gt;输入&amp;raquo;mstsc&amp;raquo;&amp;ndash;&amp;gt;回车&amp;ndash;&amp;gt;输入Ubuntu主机的IP地址&amp;ndash;&amp;gt;&amp;laquo;连接&amp;raquo;。在Ubuntu下可以通过“ifconfig”获得本机网络连接的概况，其中包括IP地址。
填上正确的IP地址，按回车，会出现一个登陆框，我们选择“sesman-Xvnc”这个，然后输入你的Ubuntu的用户名和密码，OK！&lt;/p&gt;

&lt;p&gt;后记：使用这种方法连上Ubuntu还有个问题，就是键盘的快捷键会有点小混乱。此时断开远程桌面，在Ubuntu的实体机器上，打开管理键盘快捷键，将带有“windows”键，ubunntu显示是“mod5”键（好像是类似的，记不清了）的快捷键组合删掉即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>nodejs linux安装与卸载</title>
      <link>http://wixb50.github.io/2015/12/06/nodejs-linux%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD/</link>
      <pubDate>Sun, 06 Dec 2015 12:51:33 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/12/06/nodejs-linux%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD/</guid>
      <description>

&lt;h2 id=&#34;node-js-安装-卸载-升级&#34;&gt;Node.js 安装、卸载、升级&lt;/h2&gt;

&lt;h3 id=&#34;安装-源码下载&#34;&gt;安装、源码下载&lt;/h3&gt;

&lt;p&gt;下载最新版本node的源代码：&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;解压下载文件：&lt;br /&gt;
&lt;code&gt;tar -xzvf node-v4.2.1.tar.gz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;切换工作目录至源代码目录：&lt;br /&gt;
&lt;code&gt;cd node-v4.2.1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;configure&lt;/code&gt;配置安装文件：&lt;br /&gt;
&lt;code&gt;./configure&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;make编译码代码：  &lt;em&gt;(编译Node源码时间较长，我编译用了大约40分左右。)&lt;/em&gt;&lt;br /&gt;
&lt;code&gt;make&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;make install安装：&lt;br /&gt;
&lt;code&gt;sudo make install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;查看安装：&lt;em&gt;(显示版本号)&lt;/em&gt;&lt;br /&gt;
&lt;code&gt;node -v&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;卸载&#34;&gt;卸载&lt;/h3&gt;

&lt;p&gt;保留编译完成的源码包，或者自己再重新编译生成个&lt;/p&gt;

&lt;p&gt;干掉make install命令时装进去的文件,需要管理员身份&lt;br /&gt;
&lt;code&gt;sudo make uninstall&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;只删除make时产生的临时文件：&lt;br /&gt;
&lt;code&gt;make clean&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;同时删除configure和make产生的临时文件&lt;br /&gt;
&lt;code&gt;make distclean&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;升级node版本&#34;&gt;升级Node版本&lt;/h3&gt;

&lt;p&gt;直接下载源码重新编译，安装。（覆盖了旧的版本）&lt;/p&gt;

&lt;h2 id=&#34;ps&#34;&gt;Ps&lt;/h2&gt;

&lt;p&gt;&lt;small&gt;也同样适用与其他linux平台编译安装软件。&lt;/small&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>golang使用http client发起get和post请求</title>
      <link>http://wixb50.github.io/2015/11/23/golang%E4%BD%BF%E7%94%A8http-client%E5%8F%91%E8%B5%B7get%E5%92%8Cpost%E8%AF%B7%E6%B1%82/</link>
      <pubDate>Mon, 23 Nov 2015 22:00:33 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/11/23/golang%E4%BD%BF%E7%94%A8http-client%E5%8F%91%E8%B5%B7get%E5%92%8Cpost%E8%AF%B7%E6%B1%82/</guid>
      <description>

&lt;p&gt;需要导入的包&lt;code&gt;&amp;quot;io/ioutil&amp;quot;&lt;/code&gt;、&lt;code&gt;&amp;quot;net/http&amp;quot;&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&#34;get请求&#34;&gt;get请求&lt;/h3&gt;

&lt;p&gt;get请求可以直接http.Get方法&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func httpGet() {
    resp, err := http.Get(&amp;quot;http://www.01happy.com/demo/accept.php?id=1&amp;quot;)
    if err != nil {
        // handle error
    }

    defer resp.Body.Close()
    body, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        // handle error
    }

    fmt.Println(string(body))
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;post请求&#34;&gt;post请求&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;使用http.Post方式&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func httpPost() {
    resp, err := http.Post(&amp;quot;http://www.01happy.com/demo/accept.php&amp;quot;,
        &amp;quot;application/x-www-form-urlencoded&amp;quot;,
        strings.NewReader(&amp;quot;name=cjb&amp;quot;))
    if err != nil {
        fmt.Println(err)
    }

    defer resp.Body.Close()
    body, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        // handle error
    }

    fmt.Println(string(body))
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tips：使用这个方法的话，第二个参数要设置成”application/x-www-form-urlencoded”，否则post参数无法传递。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;使用http.PostForm方法&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func httpPostForm() {
    resp, err := http.PostForm(&amp;quot;http://www.01happy.com/demo/accept.php&amp;quot;,
        url.Values{&amp;quot;key&amp;quot;: {&amp;quot;Value&amp;quot;}, &amp;quot;id&amp;quot;: {&amp;quot;123&amp;quot;}})

    if err != nil {
        // handle error
    }

    defer resp.Body.Close()
    body, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        // handle error
    }

    fmt.Println(string(body))

}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;复杂的请求&#34;&gt;复杂的请求&lt;/h3&gt;

&lt;p&gt;有时需要在请求的时候设置头参数、cookie之类的数据，就可以使用http.Do方法。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func httpDo() {
    client := &amp;amp;http.Client{}

    req, err := http.NewRequest(&amp;quot;POST&amp;quot;, &amp;quot;http://www.01happy.com/demo/accept.php&amp;quot;, strings.NewReader(&amp;quot;name=cjb&amp;quot;))
    if err != nil {
        // handle error
    }

    req.Header.Set(&amp;quot;Content-Type&amp;quot;, &amp;quot;application/x-www-form-urlencoded&amp;quot;)
    req.Header.Set(&amp;quot;Cookie&amp;quot;, &amp;quot;name=anny&amp;quot;)

    resp, err := client.Do(req)

    defer resp.Body.Close()

    body, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        // handle error
    }

    fmt.Println(string(body))
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同上面的post请求，必须要设定Content-Type为application/x-www-form-urlencoded，post参数才可正常传递.&lt;/p&gt;

&lt;h3 id=&#34;head请求&#34;&gt;Head请求&lt;/h3&gt;

&lt;p&gt;发起head请求可以直接使用http client的head方法。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>golang资料</title>
      <link>http://wixb50.github.io/2015/11/22/golang%E8%B5%84%E6%96%99/</link>
      <pubDate>Sun, 22 Nov 2015 22:00:33 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/11/22/golang%E8%B5%84%E6%96%99/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;WindowsCrossCompiling:&lt;a href=&#34;https://github.com/golang/go/wiki/WindowsCrossCompiling&#34;&gt;Building windows go programs on linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>mysql 安装配置</title>
      <link>http://wixb50.github.io/2015/11/20/mysql-%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 20 Nov 2015 19:32:33 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/11/20/mysql-%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid>
      <description>&lt;p&gt;1.更新源&lt;br /&gt;
&lt;code&gt;source /etc/apt/source.list&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;sudo apt-get update&lt;/code&gt;&lt;br /&gt;
2.在Ubuntu14.04下安装mysql：(还是从mysql官网下载安装包安装吧)&lt;br /&gt;
&lt;code&gt;sudo apt-get install mysql-server&lt;/code&gt;&lt;br /&gt;
3.在目录/etc/mysql下打开my.cnf，用vim编辑，找到&lt;br /&gt;
&lt;code&gt;bind-address   =127.0.0.1&lt;/code&gt;&lt;br /&gt;
改为：&lt;br /&gt;
&lt;code&gt;bind-address   =0.0.0.0&lt;/code&gt;或者直接将上句注释掉&lt;br /&gt;
4.使用root账户登录到Mysql数据库：&lt;br /&gt;
&lt;code&gt;mysql -u root -p&lt;/code&gt;&lt;br /&gt;
使用命令：&lt;br /&gt;
&lt;code&gt;use mysql;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;select host, user, password from user&lt;/code&gt;可以查看到当前可以连接到该服务器的用户&lt;br /&gt;
在mysql&amp;gt;输入：&lt;br /&gt;
&lt;code&gt;grant all on *.* to root@&#39;%&#39; identified by &#39;123&#39;&lt;/code&gt;&lt;br /&gt;
注：&lt;br /&gt;
* root是用户名
* passwd是连接密码&lt;br /&gt;
&lt;code&gt;flush privileges;&lt;/code&gt;  # 刷新权限表&lt;br /&gt;
5.最后在远端可以进行远程登录：&lt;br /&gt;
* 用户名：root
* 密码：123
* 端口：3306&lt;br /&gt;
完成！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>gulp 资源教程集合</title>
      <link>http://wixb50.github.io/2015/11/20/gulp-%E8%B5%84%E6%BA%90%E6%95%99%E7%A8%8B%E9%9B%86%E5%90%88/</link>
      <pubDate>Fri, 20 Nov 2015 18:51:33 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/11/20/gulp-%E8%B5%84%E6%BA%90%E6%95%99%E7%A8%8B%E9%9B%86%E5%90%88/</guid>
      <description>

&lt;h1 id=&#34;gulp-资源教程集合&#34;&gt;gulp 资源教程集合&lt;/h1&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;1.&lt;a href=&#34;http://www.w3ctech.com/topic/134&#34;&gt;Gulp开发教程（翻译）&lt;/a&gt;&lt;br /&gt;
2.&lt;a href=&#34;http://gulpjs.com/plugins/&#34;&gt;Gulp插件搜索地址&lt;/a&gt;&lt;br /&gt;
3.&lt;a href=&#34;http://www.gulpjs.com.cn/&#34;&gt;gulp中文网&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;####项目例子&lt;br /&gt;
- &lt;a href=&#34;https://github.com/Swiip/generator-gulp-angular&#34;&gt;generator-gulp-angular&lt;/a&gt;&lt;br /&gt;
- &lt;a href=&#34;https://github.com/yeoman/generator-angular#app&#34;&gt;generator-angular&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>golang排序实现 sort接口实现</title>
      <link>http://wixb50.github.io/2015/11/20/golang%E6%8E%92%E5%BA%8F%E5%AE%9E%E7%8E%B0-sort%E6%8E%A5%E5%8F%A3%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Fri, 20 Nov 2015 18:32:33 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/11/20/golang%E6%8E%92%E5%BA%8F%E5%AE%9E%E7%8E%B0-sort%E6%8E%A5%E5%8F%A3%E5%AE%9E%E7%8E%B0/</guid>
      <description>&lt;p&gt;sort.Interface接口有三个方法,给自己的struct实现这三个方法,然后用将自己的结构体传给sort.Sort方法就排序完成.&lt;/p&gt;

&lt;p&gt;sort包也有几个常用的方法sort.Float64Slice sort.IntSlise sort.StringSlise&lt;/p&gt;

&lt;p&gt;源码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import (
    &amp;quot;fmt&amp;quot;
    &amp;quot;sort&amp;quot;
)

type MapSorter []Item

type Item struct {
    Key string
    Val int64
}

func NewMapSorter(m map[string]int64) MapSorter {
    ms := make(MapSorter, 0, len(m))

    for k, v := range m {
        ms = append(ms, Item{k, v})
    }

    return ms
}

func (ms MapSorter) Len() int {
    return len(ms)
}

func (ms MapSorter) Less(i, j int) bool {
    return ms[i].Val &amp;lt; ms[j].Val // 按值排序
    //return ms[i].Key &amp;lt; ms[j].Key // 按键排序
}

func (ms MapSorter) Swap(i, j int) {
    ms[i], ms[j] = ms[j], ms[i]
}

func main(){
    m  := map[string]int64 {
        &amp;quot;e&amp;quot;: 10,
        &amp;quot;a&amp;quot;: 2,
        &amp;quot;d&amp;quot;: 15,
        &amp;quot;c&amp;quot;: 8,
        &amp;quot;f&amp;quot;: 1,
        &amp;quot;b&amp;quot;: 12,
    }

    ms := NewMapSorter(m)
    sort.Sort(ms)

    for _, item := range ms {
        fmt.Printf(&amp;quot;%s:%d\n&amp;quot;, item.Key, item.Val)
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;完成.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>http安全</title>
      <link>http://wixb50.github.io/2015/11/19/http%E5%AE%89%E5%85%A8/</link>
      <pubDate>Thu, 19 Nov 2015 15:12:17 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/11/19/http%E5%AE%89%E5%85%A8/</guid>
      <description>

&lt;h2 id=&#34;https&#34;&gt;https&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.liaoxuefeng.com/article/0014189023237367e8d42829de24b6eaf893ca47df4fb5e000&#34;&gt;给Nginx配置一个自签名的SSL证书&lt;/a&gt; 2014.12.18&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ttt.tt/9/&#34;&gt;Apache + WordPress + SSL 完全指南&lt;/a&gt; 2012.07.14&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.jjonline.cn/linux/92.html&#34;&gt;https安全链接的配置教程&lt;/a&gt; 2012.12.01&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>http知识点</title>
      <link>http://wixb50.github.io/2015/11/19/http%E7%9F%A5%E8%AF%86%E7%82%B9/</link>
      <pubDate>Thu, 19 Nov 2015 11:35:17 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/11/19/http%E7%9F%A5%E8%AF%86%E7%82%B9/</guid>
      <description>

&lt;h2 id=&#34;http网络知识收集&#34;&gt;http网络知识收集&lt;/h2&gt;

&lt;p&gt;content&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考资料&#34;&gt;参考资料&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jianshu.com/p/2ecd288d27ad&#34;&gt;http知识点总结&lt;/a&gt; 2015.10.24&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jianshu.com/p/0a47fc776314&#34;&gt;http持久连接&lt;/a&gt; 2014.05.03&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.linux178.com/web/httprequest.html/comment-page-1&#34;&gt;一次完整的HTTP事务&lt;/a&gt; January 11, 2014&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tshare365.com/archives/1295.html&#34;&gt;tcpdump、wireshark、tshark的简单介绍&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>git travis-ci</title>
      <link>http://wixb50.github.io/2015/11/16/git-travis-ci/</link>
      <pubDate>Mon, 16 Nov 2015 13:25:17 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/11/16/git-travis-ci/</guid>
      <description>&lt;p&gt;&lt;strong&gt;参考资料&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kankanews.com/ICkengine/archives/134261.shtml&#34;&gt;持续集成服务托管Travis CI入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://travis-ci.org/&#34;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>mysql数据字典生成工具</title>
      <link>http://wixb50.github.io/2015/11/13/mysql%E6%95%B0%E6%8D%AE%E5%AD%97%E5%85%B8%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Fri, 13 Nov 2015 21:35:17 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/11/13/mysql%E6%95%B0%E6%8D%AE%E5%AD%97%E5%85%B8%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7/</guid>
      <description>

&lt;h2 id=&#34;mysql数据词典生成器&#34;&gt;mysql数据词典生成器&lt;/h2&gt;

&lt;p&gt;一个php的在线词典生成器，便于将数据库导出成表格，一般论文里面可能有需要哦。&lt;/p&gt;

&lt;p&gt;下载地址 &lt;a href=&#34;http://vdisk.weibo.com/s/yThjZrryTIxQl&#34;&gt;http://vdisk.weibo.com/s/yThjZrryTIxQl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;效果图&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.funboxpower.com/wp-content/uploads/2015/04/QQ%E6%88%AA%E5%9B%BE20150401141354.png&#34; alt=&#34;result&#34; /&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;如果不能下载的话，附上源码：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
/**
 * 生成mysql数据字典
 */
header(&amp;quot;Content-type: text/html; charset=utf-8&amp;quot;);
//配置数据库
$dbserver   = &amp;quot;127.0.0.1&amp;quot;;
$dbusername = &amp;quot;root&amp;quot;;
$dbpassword = &amp;quot;root&amp;quot;;
$database   = &amp;quot;wsx&amp;quot;;

//其他配置
$mysql_conn = @mysql_connect(&amp;quot;$dbserver&amp;quot;, &amp;quot;$dbusername&amp;quot;, &amp;quot;$dbpassword&amp;quot;) or die(&amp;quot;Mysql connect is error.&amp;quot;);
mysql_select_db($database, $mysql_conn);
mysql_query(&#39;SET NAMES utf8&#39;, $mysql_conn);
$table_result = mysql_query(&#39;show tables&#39;, $mysql_conn);

$no_show_table = array();    //不需要显示的表
$no_show_field = array();   //不需要显示的字段

//取得所有的表名
while($row = mysql_fetch_array($table_result)){
    if(!in_array($row[0],$no_show_table)){
        $tables[][&#39;TABLE_NAME&#39;] = $row[0];
    }
}
//替换所以表的表前缀
if(@$_GET[&#39;prefix&#39;]){
    $prefix = &#39;czzj&#39;;
    foreach($tables as $key =&amp;gt; $val){
        $tableName = $val[&#39;TABLE_NAME&#39;];
        $string = explode(&#39;_&#39;,$tableName);
        if($string[0] != $prefix){  
            $string[0] = $prefix;  
            $newTableName = implode(&#39;_&#39;, $string);  
            mysql_query(&#39;rename table &#39;.$tableName.&#39; TO &#39;.$newTableName);  
        }
    }
    echo &amp;quot;替换成功！&amp;quot;;exit();
}

//循环取得所有表的备注及表中列消息
foreach ($tables as $k=&amp;gt;$v) {
    $sql  = &#39;SELECT * FROM &#39;;
    $sql .= &#39;INFORMATION_SCHEMA.TABLES &#39;;
    $sql .= &#39;WHERE &#39;;
    $sql .= &amp;quot;table_name = &#39;{$v[&#39;TABLE_NAME&#39;]}&#39;  AND table_schema = &#39;{$database}&#39;&amp;quot;;
    $table_result = mysql_query($sql, $mysql_conn);
    while ($t = mysql_fetch_array($table_result) ) {
        $tables[$k][&#39;TABLE_COMMENT&#39;] = $t[&#39;TABLE_COMMENT&#39;];
    }

    $sql  = &#39;SELECT * FROM &#39;;
    $sql .= &#39;INFORMATION_SCHEMA.COLUMNS &#39;;
    $sql .= &#39;WHERE &#39;;
    $sql .= &amp;quot;table_name = &#39;{$v[&#39;TABLE_NAME&#39;]}&#39; AND table_schema = &#39;{$database}&#39;&amp;quot;;

    $fields = array();
    $field_result = mysql_query($sql, $mysql_conn);
    while ($t = mysql_fetch_array($field_result) ) {
        $fields[] = $t;
    }
    $tables[$k][&#39;COLUMN&#39;] = $fields;
}
mysql_close($mysql_conn);


$html = &#39;&#39;;
//循环所有表
foreach ($tables as $k=&amp;gt;$v) {
    $html .= &#39;  &amp;lt;h3&amp;gt;&#39; . ($k + 1) . &#39;、&#39; . $v[&#39;TABLE_COMMENT&#39;] .&#39;  （&#39;. $v[&#39;TABLE_NAME&#39;]. &#39;）&amp;lt;/h3&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
    $html .= &#39;  &amp;lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot; cellpadding=&amp;quot;0&amp;quot; width=&amp;quot;100%&amp;quot;&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
    $html .= &#39;      &amp;lt;tbody&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
    $html .= &#39;          &amp;lt;tr&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
    $html .= &#39;              &amp;lt;th&amp;gt;字段名&amp;lt;/th&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
    $html .= &#39;              &amp;lt;th&amp;gt;数据类型&amp;lt;/th&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
    $html .= &#39;              &amp;lt;th&amp;gt;默认值&amp;lt;/th&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
    $html .= &#39;              &amp;lt;th&amp;gt;允许非空&amp;lt;/th&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
    $html .= &#39;              &amp;lt;th&amp;gt;自动递增&amp;lt;/th&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
    $html .= &#39;              &amp;lt;th&amp;gt;备注&amp;lt;/th&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
    $html .= &#39;          &amp;lt;/tr&amp;gt;&#39;.&amp;quot;\n&amp;quot;;

    foreach ($v[&#39;COLUMN&#39;] as $f) {
        if(@!is_array($no_show_field[$v[&#39;TABLE_NAME&#39;]])){
            $no_show_field[$v[&#39;TABLE_NAME&#39;]] = array();
        }
        if(!in_array($f[&#39;COLUMN_NAME&#39;],$no_show_field[$v[&#39;TABLE_NAME&#39;]])){
            $html .= &#39;          &amp;lt;tr&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
            $html .= &#39;              &amp;lt;td class=&amp;quot;c1&amp;quot;&amp;gt;&#39; . $f[&#39;COLUMN_NAME&#39;] . &#39;&amp;lt;/td&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
            $html .= &#39;              &amp;lt;td class=&amp;quot;c2&amp;quot;&amp;gt;&#39; . $f[&#39;COLUMN_TYPE&#39;] . &#39;&amp;lt;/td&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
            $html .= &#39;              &amp;lt;td class=&amp;quot;c3&amp;quot;&amp;gt;&#39; . $f[&#39;COLUMN_DEFAULT&#39;] . &#39;&amp;lt;/td&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
            $html .= &#39;              &amp;lt;td class=&amp;quot;c4&amp;quot;&amp;gt;&#39; . $f[&#39;IS_NULLABLE&#39;] . &#39;&amp;lt;/td&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
            $html .= &#39;              &amp;lt;td class=&amp;quot;c5&amp;quot;&amp;gt;&#39; . ($f[&#39;EXTRA&#39;]==&#39;auto_increment&#39;?&#39;是&#39;:&#39;&amp;amp;nbsp;&#39;) . &#39;&amp;lt;/td&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
            $html .= &#39;              &amp;lt;td class=&amp;quot;c6&amp;quot;&amp;gt;&#39; . $f[&#39;COLUMN_COMMENT&#39;] . &#39;&amp;lt;/td&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
            $html .= &#39;          &amp;lt;/tr&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
        }
    }
    $html .= &#39;      &amp;lt;/tbody&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
    $html .= &#39;  &amp;lt;/table&amp;gt;&#39;.&amp;quot;\n&amp;quot;;
}
?&amp;gt;
&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;WIXB数据库数据字典生成代码&amp;lt;/title&amp;gt;
&amp;lt;meta name=&amp;quot;generator&amp;quot; content=&amp;quot;ThinkDb V1.0&amp;quot; /&amp;gt;
&amp;lt;meta name=&amp;quot;author&amp;quot; content=&amp;quot;WIXB数据库数据字典生成代码&amp;quot; /&amp;gt;
&amp;lt;meta name=&amp;quot;copyright&amp;quot; content=&amp;quot;2008-2014 Tensent Inc.&amp;quot; /&amp;gt;
&amp;lt;style&amp;gt;
body, td, th { font-family: &amp;quot;微软雅黑&amp;quot;; font-size: 14px; }
.warp{margin:auto; width:900px;}
.warp h3{margin:0px; padding:0px; line-height:30px; margin-top:10px;}
table { border-collapse: collapse; border: 1px solid #CCC; background: #efefef; }
table th { text-align: left; font-weight: bold; height: 26px; line-height: 26px; font-size: 14px; text-align:center; border: 1px solid #CCC; padding:5px;}
table td { height: 20px; font-size: 14px; border: 1px solid #CCC; background-color: #fff; padding:5px;}
.c1 { width: 120px; }
.c2 { width: 120px; }
.c3 { width: 150px; }
.c4 { width: 80px; text-align:center;}
.c5 { width: 80px; text-align:center;}
.c6 { width: 270px; }
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div class=&amp;quot;warp&amp;quot;&amp;gt;
    &amp;lt;h1 style=&amp;quot;text-align:center;&amp;quot;&amp;gt;WIXB数据库数据字典生成代码&amp;lt;/h1&amp;gt;
&amp;lt;?php echo $html; ?&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;完&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu常用软件集合</title>
      <link>http://wixb50.github.io/2015/11/12/ubuntu%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E9%9B%86%E5%90%88/</link>
      <pubDate>Thu, 12 Nov 2015 10:23:25 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/11/12/ubuntu%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E9%9B%86%E5%90%88/</guid>
      <description>

&lt;h3 id=&#34;broswer&#34;&gt;Broswer&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.google.cn/intl/zh-CN/chrome/browser/desktop/index.html&#34;&gt;chrome&lt;/a&gt; 下载deb包安装&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;editor&#34;&gt;Editor&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The Most Intelligent Java IDE:&lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;Intellij IDEA&lt;/a&gt;&lt;br /&gt;
1.安装配置好JDK环境,下载tar.gz文件,解压到&lt;code&gt;tar -zxvf ideaIU-14.tar.gz -C /usr/local/intellijIDEA(自己命名)&lt;/code&gt;;&lt;br /&gt;
2.进入安装目录下的bin目录，执行&lt;code&gt;./idea.sh&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;几个license：
(1)
key:IDEA
value:61156-YRN2M-5MNCN-NZ8D2-7B4EW-U12L4
(2)
key:huangwei
value:97493-G3A41-0SO24-W57LI-Y2UGI-JGTU2
(3)
key:itey
value:91758-T1CLA-C64F3-T7X5R-A7YDO-CRSN1
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sublimetext.com/3&#34;&gt;Sublime Text 3&lt;/a&gt; 下载deb包安装&lt;/li&gt;
&lt;li&gt;神一样的&lt;a href=&#34;http://www.vim.org/&#34;&gt;Vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/emacs/&#34;&gt;Emacs&lt;/a&gt; How to &lt;a href=&#34;http://ubuntuhandbook.org/index.php/2014/10/emacs-24-4-released-install-in-ubuntu-14-04/&#34;&gt;Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;简单的MD编辑器&lt;a href=&#34;http://sourceforge.net/projects/retext/&#34;&gt;Retext&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;git&#34;&gt;Git&lt;/h3&gt;

&lt;p&gt;安装&lt;code&gt;sudo apt-get install git&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;git客户端&lt;a href=&#34;http://www.syntevo.com/smartgit/&#34;&gt;SmartGit&lt;/a&gt; 建议直接命令行&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;删除&lt;code&gt;.smartgit&lt;/code&gt;下面的&lt;code&gt;settings.xml&lt;/code&gt;即可重新使用1个月。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;美化&#34;&gt;美化&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;默认使用Unity桌面&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;unity-tweak-tool&lt;br /&gt;
安装&lt;code&gt;sudo apt-get install unity-tweak-tool&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;也可以通过安装ubuntu-tweak来实现主题更换&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:tualatrix/ppa
sudo apt-get update
sudo apt-get install ubuntu-tweak
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;主题网址&lt;a href=&#34;http://gnome-look.org/&#34;&gt;http://gnome-look.org/&lt;/a&gt; 将解压的主题文件夹拷贝到/usr/share/themes/目录下,然后使用&lt;code&gt;unity-tweak-tool&lt;/code&gt;选择;&lt;/li&gt;
&lt;li&gt;icon网址&lt;a href=&#34;https://github.com/NitruxSA/ardis-icon-theme&#34;&gt;https://github.com/NitruxSA/ardis-icon-theme&lt;/a&gt; 将解压的主题文件夹拷贝到/usr/share/icons/目录下,然后使用&lt;code&gt;unity-tweak-tool&lt;/code&gt;选择;或者直接命令安装再设置;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;sql&#34;&gt;SQL&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Mysql客户端 &lt;a href=&#34;http://dev.mysql.com/downloads/workbench/&#34;&gt;Workbench&lt;/a&gt; 下载deb安装&lt;/li&gt;
&lt;li&gt;Redis客户端 &lt;a href=&#34;http://redisdesktop.com/&#34;&gt;Redis Desktop Manager&lt;/a&gt; 下载deb安装&lt;/li&gt;
&lt;li&gt;Mongo客户端 &lt;a href=&#34;http://robomongo.org/&#34;&gt;Robomongo&lt;/a&gt; 下载deb安装&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;思维导图&#34;&gt;思维导图&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;最流行的思维导图 &lt;a href=&#34;http://www.xmind.net/cn/&#34;&gt;XMind&lt;/a&gt; 下载deb安装&lt;/li&gt;
&lt;li&gt;百度在线脑图 &lt;a href=&#34;http://naotu.baidu.com/&#34;&gt;百度脑图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;影音&#34;&gt;影音&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VLC Media Player&lt;/code&gt; 软件商店安装&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;fq&#34;&gt;FQ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;开放网络客户端 &lt;a href=&#34;https://getlantern.org/&#34;&gt;Lantern&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;虚拟机&#34;&gt;虚拟机&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;开源&lt;a href=&#34;https://www.virtualbox.org/wiki/Downloads&#34;&gt;VirtualBox&lt;/a&gt; 下载deb安装&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;develop&#34;&gt;Develop&lt;/h3&gt;

&lt;p&gt;Frontend：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node&lt;/a&gt; 最好编译安装 &lt;a href=&#34;https://linux.cn/article-5766-1.html&#34;&gt;install-tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;null-link&#34;&gt;npm&lt;/a&gt; node包管理器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;null-link&#34;&gt;bower&lt;/a&gt; 前端开发包管理器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;null-link&#34;&gt;gulp&lt;/a&gt; 构建工具&lt;/li&gt;
&lt;li&gt;[grunt-cli]() 比较老的构建工具&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Backend：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[Go]() 解压存放&lt;code&gt;/usr/local/go&lt;/code&gt;,配置好&lt;code&gt;GOROOT、GOPATH&lt;/code&gt;和path环境。&lt;code&gt;GOPATH&lt;/code&gt;最好一个就够了。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;GoTools：&lt;code&gt;gocode&lt;/code&gt;代码自动化提示工具。&lt;code&gt;godep&lt;/code&gt;go包管理器。&lt;code&gt;goconvey&lt;/code&gt;go测试工具。&lt;br /&gt;
Tips：如需sudo也支持go命令,执行链接命令：&lt;code&gt;sudo ln -s /usr/local/go/bin/go /usr/bin/go&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;[gradle]() java包管理器,构建工具&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Server：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[Docker]() 容器化服务器&lt;/li&gt;
&lt;li&gt;[vagrant]() 虚拟机管理工具&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu常用命令集合</title>
      <link>http://wixb50.github.io/2015/11/07/ubuntu%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%9B%86%E5%90%88/</link>
      <pubDate>Sat, 07 Nov 2015 22:07:33 +0800</pubDate>
      <author>wixb50@gmail.com (Wixb)</author>
      <guid>http://wixb50.github.io/2015/11/07/ubuntu%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%9B%86%E5%90%88/</guid>
      <description>

&lt;h3 id=&#34;关机-重启命令&#34;&gt;关机、重启命令&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;shutdown –help  #可以查看shutdown命令如何使用，当然也可以使用man shutdown命令。
shutdown -h now #现在立即关机
shutdown -r now #现在立即重启
shutdown -r +3 #三分钟后重启
shutdown -h +3 “The System will shutdown after 3 minutes” #提示使用者将在三分钟后关机
shutdown -r 20:23 #在20：23时将重启计算机
shutdown -r 20:23 &amp;amp; #可以将在20：23时重启的任务放到后台去，用户可以继续操作终端
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ln-命令&#34;&gt;ln 命令&lt;/h3&gt;

&lt;p&gt;功能是为某一个文件或目录在另外一个位置建立一个同步的链接：&lt;/p&gt;

&lt;p&gt;这里有两点要注意：ln的链接又 软链接和硬链接两种，软链接就是ln –s ** **，它只会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，硬链接ln ** **，没有参数-s， 它会在你选定的位置上生成一个和源文件大小相同的文件。
&amp;gt;这个命令最常用的参数是-s，具体用法是(软链接)：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo ln -s 源文件 目标文件&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;删除链接&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;rm -rf   symbolic_name   注意不是rm -rf   symbolic_name/&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>